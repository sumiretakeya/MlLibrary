/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// Generated on: 14.06.2023 21:03:40

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 2112;
#else
constexpr int kTensorArenaSize = 1088;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[4];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,855 } };
const TfArray<1, float> quant0_scale = { 1, { 0.085714392364025116, } };
const TfArray<1, int> quant0_zero = { 1, { 25 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(16) int8_t tensor_data1[20*855] = { 
  -22, -21, -18, 4, -5, 3, -25, -22, -24, 4, 27, -15, -20, 26, 12, 29, 27, -10, 20, -19, 26, -27, 28, -22, -17, -18, -27, 12, -12, -11, -19, -27, 6, 26, 9, -12, -16, 20, 8, -3, 20, 29, 20, 16, -25, 9, -7, 14, -14, 5, 15, 24, -25, 24, 4, 6, 3, -6, -4, 1, 3, -8, -15, -8, -14, -8, 14, 14, -1, -22, 26, -18, -3, 2, -5, 28, 18, 22, -2, 18, 20, 13, 4, 20, -2, 8, -11, 10, -5, 21, 24, -23, 4, 15, 0, -10, 6, 11, 1, 29, -29, -15, 20, -15, -5, -24, 11, -23, 4, 9, 5, -4, -15, -4, -9, 1, 17, 4, -12, -6, 23, 14, 16, 27, 26, -28, 24, -16, 22, -22, 26, -28, -8, -15, 20, -10, -11, 30, 4, 18, 21, -11, -29, 15, 10, 29, 1, -21, 4, 15, 19, 14, -3, 13, 26, 22, 3, 6, -5, 25, -7, -13, -26, 22, -19, -28, 14, -25, -21, 30, -2, -6, -17, 20, 27, -19, 4, 12, 11, 28, 17, -19, 28, -23, -5, -25, -22, 22, -17, 10, 26, 30, -21, 27, -3, 17, -11, 14, 8, -14, -6, -25, 23, 19, 26, -7, 28, -25, -14, -19, 9, -8, 3, -14, 2, -6, -13, 7, -29, -24, 1, -28, 8, 21, 14, -19, -2, -8, 28, 27, -13, -6, 14, 17, 6, 4, 18, 7, 23, 22, -13, 11, -1, 6, 5, 28, 15, -5, 5, 25, -24, -24, -11, 1, -30, 2, -1, -3, 7, -1, 14, 15, 2, -1, -1, 28, -5, -10, -21, 14, 21, 26, -26, -25, 17, -23, 15, -15, 14, -14, -20, 30, 2, 22, -22, 29, 18, -25, 15, 14, 13, -16, -28, 29, 10, 20, 8, 4, 8, 9, -29, -11, 0, -15, -21, -5, -12, 7, -4, 7, 3, -27, 28, -8, 10, 0, -24, -11, -9, 28, 26, 18, 19, -21, 23, 11, 9, 11, -11, 3, 20, -21, -13, 18, -5, 24, 23, -18, -19, 22, 18, -23, -21, -24, -24, -6, -9, -16, 3, -17, 9, 4, -15, -30, -10, -2, 13, -4, -5, -11, 7, 3, 7, 16, -22, 1, -23, 10, -22, 26, -29, -14, -27, 0, 27, 29, -28, -13, 25, -22, -21, 30, -6, -14, 12, -18, -2, 20, -4, -5, -1, -14, 18, 24, 7, -22, -17, -30, 4, 8, -16, 1, -11, -27, 20, 27, 12, -15, -7, 25, -26, -27, 18, -30, 21, -13, -8, -21, 16, 14, -9, -19, -23, -13, -13, 30, -29, -25, 9, -5, -21, -18, -19, -19, -18, -9, 24, 12, 29, -6, -1, -18, 15, -6, 7, 18, 18, 8, -28, 2, -29, 9, -15, -11, 15, 0, -11, -26, 14, 8, 24, -20, -7, 15, -4, -29, 6, 10, 11, 29, -15, 9, -13, 13, -29, -3, -4, -3, -6, -10, 10, 12, -5, -16, -24, -6, 17, -16, 7, 14, 4, 15, 27, 2, -18, 0, 7, -11, -6, -10, 29, -4, -2, 1, -23, 30, 0, 17, 20, -11, -8, 1, 21, 2, 16, -1, 28, -21, -21, -20, 25, 0, 14, 1, 4, -30, -12, 6, -16, 8, 25, 15, -29, -30, -21, -28, -2, -4, -6, 20, 20, -1, 10, -29, 9, 10, 23, -26, -19, 24, -29, 27, 25, -30, -26, 30, 10, -3, -28, 11, 24, 3, -29, 27, 27, -21, -19, -5, 1, 16, 18, -12, -20, -4, -27, 10, 12, -15, -26, 7, 19, 10, 30, -29, 0, -13, 23, -11, 14, -28, 9, -2, 25, 11, -20, -8, 12, 14, 0, -21, -24, -6, 17, 15, 11, 1, -14, 20, 30, 18, 24, 14, -2, 16, -2, 0, -20, 15, -19, 21, 28, 28, 19, 30, -15, -11, 18, 10, -7, 0, 12, 3, -24, 2, -27, 0, -20, -2, -15, 19, -17, -4, 29, 11, -15, 17, 2, -29, -3, -8, 22, 23, 30, 26, -26, -10, -24, 8, 20, 1, -14, -16, -30, 5, 23, -29, 6, -30, -8, -4, -26, -11, -25, 27, 20, -24, 21, -16, -19, 23, -12, -10, -22, 5, 7, -12, 8, 4, 5, 23, -22, 26, -26, -5, 17, -13, -11, -27, -3, 27, 23, 19, 2, -14, 19, 7, 29, -10, 13, 3, -11, 14, -4, -13, 27, -28, 5, 10, -21, -10, 13, 3, -9, 21, 26, -25, 16, 12, -13, 20, 19, -22, 23, 27, -15, 6, -8, 21, -23, 26, -22, -22, 25, 1, -7, 11, 1, 8, -17, 11, -1, 7, 25, -7, 11, -3, 3, 13, 8, -5, -2, 18, 14, -5, -12, 2, -8, -28, 10, 22, -12, 7, -14, -26, -15, -3, 29, -16, 6, -16, 4, 7, 11, 30, -17, 26, -29, 18, 18, -15, -28, -1, -12, 19, -29, -1, -10, 14, -14, -12, 7, 8, -8, 17, 20, -16, -13, -9, 14, 30, 30, 23, 15, -4, -18, 10, 13, 14, 0, 18, 16, 22, -4, 0, 11, -27, -12, 10, 21, -16, -17, 12, -17, 27, -2, -2, -19, 20, -28, 8, -26, -5, -7, -1, 20, -14, -20, 13, 0, 10, -2, -18, 30, -19, -7, 
  -35, -101, -66, -8, 26, 26, 17, 23, -26, 18, 14, -16, -7, -26, -18, -13, -12, -26, 20, 13, -2, -17, -24, -17, 9, -17, 7, 14, -16, 2, 25, 29, -28, -4, -26, 28, -8, 19, 23, -13, -14, 6, 6, 0, -27, -30, 4, -5, -9, -19, 19, 33, -24, -11, 31, -1, -23, 34, -1, -17, 30, 7, -12, 23, -6, -11, 16, -14, 23, -3, -26, 20, -3, -11, 22, 10, -15, -18, 27, -16, 35, -5, -12, -16, 0, 9, -12, 35, 0, -18, 34, 7, -18, -14, -24, -47, -52, -15, -32, -24, -7, 20, -22, 16, -23, 20, -29, -1, -16, -20, -21, -4, 7, -14, 15, -31, -33, -36, -31, -4, 7, -9, -3, -26, 3, -35, -37, 15, 11, -21, -4, -27, -29, -10, -16, 12, 6, 14, -17, 1, 4, 3, -9, 1, -30, -11, -37, 0, 2, 7, 5, -19, -21, 20, -12, -4, -27, -5, 8, -20, -3, -29, 10, 9, -15, 0, 20, -25, 8, 25, 23, -31, 15, -16, -24, -3, -22, 4, -27, -20, -9, 17, -24, 13, -11, 15, 3, -27, 19, -29, -39, 25, -72, 23, -19, -10, -21, -1, 23, 22, -10, -17, -31, -10, 5, -14, -18, 6, -18, 20, -19, 24, 5, 2, -22, -24, 16, -28, 1, -19, 13, -20, 19, -16, -16, 19, 2, -13, -9, 11, 19, -16, -33, -18, 15, -26, -7, -17, -37, 9, 5, -31, 8, 21, 13, 8, -16, -34, -18, 20, -23, 10, -6, 22, 16, -30, -22, 4, 4, 12, 20, 15, 28, -10, 13, 11, 3, 29, 27, 30, 20, -12, -18, -18, -1, 11, 29, 1, -4, 0, 20, -24, 32, 4, 6, -109, 27, 69, -14, -68, 19, 2, 3, 0, -23, 8, -33, -25, -7, 15, 23, 18, -20, 12, 1, 11, 2, 11, 1, -30, -17, -28, 2, -24, 28, 7, -21, -11, 2, -30, 13, -10, 21, 26, -29, -7, -22, -2, -15, 23, 21, -18, -25, -17, 2, 2, -38, -39, -38, 18, 10, 6, -15, 3, 11, -22, -9, 12, 1, -21, 24, -10, 24, -23, -24, 24, -32, -11, 9, -15, 7, 12, -2, 17, -35, -32, -26, -10, 3, -15, -2, -36, 23, 3, -10, -17, -2, -6, 14, -12, -88, 79, -31, 23, -26, 11, -24, -23, -4, 15, -10, -5, -14, 9, 19, 11, 11, -9, 3, -13, -2, -19, 4, 10, 23, -21, 31, 19, 7, 19, 11, -21, -2, -8, -14, -8, 15, -14, -3, 16, -1, 22, 31, -26, 14, -3, -10, 31, 9, -12, 3, -27, -18, -29, -5, -4, -21, 20, -21, -11, 20, -5, 16, 7, -21, -20, -28, -26, -19, -6, -14, -3, -31, 23, 3, -16, 20, -10, 3, -22, 12, -23, 26, 14, -28, -16, -17, 18, 27, 25, -25, 21, -15, -20, -12, -63, -72, -38, 12, -17, 5, -26, -17, 20, -32, -10, -23, 23, 15, 5, -29, -7, 9, -6, 7, -37, -10, -5, 8, 16, 19, 16, -20, -15, 21, 0, -3, 8, 4, -24, -12, 26, 26, -20, 25, 12, -15, -24, 1, 22, 28, 26, -10, -7, -17, 17, 9, 27, 31, 36, 31, -25, 4, -10, 2, -30, 0, -1, -18, -20, 16, -6, -7, -34, -26, 19, -39, -6, -28, -23, 17, -9, 17, -7, 29, 20, 0, 13, 0, 22, -9, -24, 7, 3, 6, 18, 23, -35, 1, 2, -77, -88, -17, 5, 23, 27, -1, 28, 7, 13, 17, 30, -19, 14, 14, 4, 12, 16, -16, -24, -6, 27, 11, 16, -20, -15, -18, -2, 25, 20, 7, 13, 10, -22, 2, 7, -21, 23, 16, 21, 15, -24, -5, -2, -18, -21, 32, 24, -21, 23, 14, 6, -29, -26, -23, 6, -21, -25, -13, 9, -6, -2, 25, 29, -8, 7, -20, 28, 19, -23, 8, -26, -11, 28, -7, -22, -18, 14, 18, 20, -6, 25, 6, 17, 25, 3, -11, 12, 15, -6, -17, -12, -16, -1, -19, -15, -92, 100, -20, -3, 22, 28, -5, 10, 26, 3, -12, -23, 6, 24, -24, 17, -15, -16, -21, -5, -3, 11, 10, 26, 17, -6, 4, -8, 17, 6, 17, 3, -2, -27, 25, 16, 4, 8, -14, -25, 2, -17, -24, 5, -13, 12, 26, -19, -12, 14, -28, -12, -19, 25, -25, -12, 9, -19, -18, -31, 6, -22, 13, -12, -29, -3, -22, 10, -4, -6, -18, -22, -2, -10, -12, -7, 12, 14, -15, -8, 1, -3, 15, 14, -5, -19, -21, 11, 7, 13, 17, 25, 10, 11, -51, -83, 90, -28, -10, 22, 24, 22, -11, 23, 9, 26, 4, -22, 30, -13, -10, 5, -6, -25, 29, 22, -26, -21, -26, 2, -21, 22, 28, -16, 1, -10, -32, -24, -24, -9, -18, -7, -31, -25, -9, -13, -6, -22, 4, -29, -30, -12, -8, 3, -22, 23, -4, 9, -23, 16, 3, -22, 12, -2, 32, 18, 25, -26, -9, 4, 6, 11, 31, -21, 5, -5, -2, 20, 32, 36, 5, 32, 41, 9, -1, 1, 2, 18, 23, -9, -14, 1, -20, 31, 18, -23, 11, -11, -22, 
  34, 69, 35, 11, -17, 7, -28, -7, -19, 3, -10, -8, -23, -7, 15, -26, -21, -8, 24, -30, 19, -5, -16, 5, -15, 24, 2, -17, -6, -20, -22, 20, -29, 9, -23, 6, 4, -7, -18, -22, 22, -7, -2, -3, -7, 4, 23, -5, 32, -23, 26, -4, 1, -25, 15, 11, 14, 3, 3, 16, 5, -34, -32, 5, 9, -27, -20, -4, 10, 22, 16, 8, -17, 23, -17, 11, -29, -17, -32, -18, -4, -26, -35, -4, 12, 17, -15, 4, -32, 3, -19, -1, -37, -17, 23, 70, 67, 32, 17, -9, -21, 9, 21, -3, 20, 27, -15, 30, 0, -16, 3, 16, 11, -7, 32, 9, 25, -15, -17, -20, 35, 29, 23, 31, -19, -7, -3, -20, -19, 0, 19, 1, 6, 17, 20, 2, -6, -5, 10, 24, 1, -5, 9, 0, 31, -20, -23, -5, -12, 9, 24, -27, -18, -6, -19, -4, 8, -29, -28, 9, 1, 6, 23, -17, 13, 21, -25, -19, 9, 14, -8, -2, 25, 21, -21, 9, -25, -5, 4, 3, 6, 5, 32, -5, -28, 2, -17, 20, 18, -18, 51, -26, 54, -19, 12, -13, -14, 24, -28, -5, 26, -21, 31, 13, 16, -13, 29, -4, 15, 22, -5, -21, 11, 28, 25, -25, 6, 5, 5, 22, -3, -19, 29, 8, -1, -1, -22, 29, 4, 28, -21, -14, 8, 17, 11, -15, 6, 15, 20, 8, 5, 35, 21, -9, -16, 2, 3, -24, 23, -2, 9, 13, -30, -26, -9, -17, 17, -4, 7, -3, -3, 1, 3, -1, -10, -11, 14, 19, -29, 15, 23, -32, -24, -10, 15, -26, 20, -2, 22, -5, 1, 26, 7, 26, -23, 71, -38, -55, 23, 8, 19, 30, 20, 4, 30, 28, 25, 16, 25, 33, -7, -14, 11, 10, 4, -18, -15, 27, 15, -22, 22, -25, 18, 24, -9, -17, -15, 9, 24, 13, -27, 8, 2, 21, 4, -4, -6, -21, 29, -6, 4, 15, -3, 0, -22, 8, -5, 29, 26, -11, -6, 17, 7, 35, -2, 6, 25, -27, -18, -16, -20, 10, 1, 29, -22, 9, 29, -14, 5, 9, 17, -9, -10, 5, -27, 3, 31, 16, 6, 3, 22, 21, -25, -24, 14, 25, 17, 17, -23, -8, 41, -18, 3, -12, 31, -20, -14, 8, 19, -31, -5, 9, 25, 8, 13, 13, -21, 7, 27, 26, 11, 7, -23, 26, -7, -32, -15, -17, 0, -29, 22, -1, 2, -18, -5, -4, -2, -30, 20, -20, -15, 4, 0, -20, 0, 6, -24, 16, 3, -12, 6, 28, 11, 6, -3, -4, -7, -4, -15, 20, 19, 15, 17, 7, -17, 28, 12, 4, 26, -17, 15, -22, 8, 24, -21, -10, -8, 18, 22, -26, 22, -27, 11, -31, 1, -12, -3, 26, -17, -17, 14, -5, -20, 13, -2, 42, 73, 25, 26, 47, -2, 19, -29, 5, -21, -23, 17, -5, -10, -24, 4, -21, 16, 15, -6, -13, -2, -15, -2, 9, 23, -23, -14, 11, -1, -19, 18, -28, 27, -3, 11, 30, -13, -1, 0, 15, -1, -22, 3, 13, -31, 16, -25, -5, -15, 11, -26, -25, 5, -17, 21, -6, 19, -15, 19, -3, 29, 33, -12, 23, -7, 37, 33, 8, 4, -10, -8, -7, -13, 18, 4, 14, 28, -28, -12, -23, -9, -18, 2, -12, -16, 9, -5, -24, -6, 10, -26, -23, -1, 30, 30, 82, 8, 8, 17, 8, -14, -23, -10, -5, 9, -23, -33, 27, 25, -29, -22, -2, -19, 21, -18, -14, 15, 4, 0, 19, -21, -1, 10, -5, -10, -15, -33, 25, 21, -10, 8, -20, -24, -18, -21, 15, -3, 18, -29, 8, 10, 16, -1, -9, 8, 12, 16, -18, -20, 16, -30, -25, -24, -28, 11, 22, 10, -30, -4, -20, 15, 0, -1, 18, -28, 9, -24, -22, 14, -33, -1, -21, -8, 14, -10, 7, -2, -18, 18, 2, -31, 2, -26, 14, 9, 4, 8, 25, 0, 64, 76, -93, 48, 15, -4, 15, -6, 16, -23, -18, -4, -31, -2, 2, -29, -18, -1, -9, -12, 11, -8, 8, -12, -19, 31, 28, -1, 29, 27, 25, -24, -25, 30, 4, 25, -7, 19, 17, 29, -25, 12, -11, -17, -12, -3, -26, -9, 6, -12, -34, 2, 24, -23, 10, -4, -25, -12, -12, -31, -30, 19, 16, 14, 26, 0, 18, -15, -11, -4, 1, 4, -22, -24, -12, -7, -32, -4, -10, 21, -23, -26, -36, -8, -26, 0, -12, 25, 17, -26, 12, 24, -35, 18, -17, 72, 74, -74, 12, -1, 21, 12, -5, 6, -20, -4, -5, -29, 21, -7, -18, 7, -10, 23, -34, -5, 5, 4, 25, -8, 14, -30, 14, 16, 15, -15, 22, -19, -6, 6, -16, 7, 13, 0, -23, -11, 20, -24, -7, 22, -25, -19, -1, 9, -18, -17, -26, 9, -30, -34, -15, 17, 9, 5, -23, 14, 8, -8, 3, 12, 1, -1, -21, 6, -21, -5, -10, 16, 21, -18, -13, 10, -28, 14, -37, 12, -42, -2, 9, -22, -5, 4, -15, -35, 11, -3, -4, -23, 26, -1, 
  -29, -8, -24, 13, 8, 9, -21, 5, 5, 26, 0, -26, 5, 13, 3, -15, -8, -6, 28, 18, -30, -19, 30, -2, -4, 28, 2, -10, 23, 6, 0, 22, 2, -25, -7, 23, 7, -6, -22, 1, 2, -5, -7, 16, -23, -19, 22, -22, 17, 18, 25, -17, -12, 27, -27, -17, 16, 1, 19, -21, -28, -16, -6, 19, -17, 9, -9, -30, -29, 11, 14, -11, 0, -18, 4, -22, -25, 12, -15, 17, 17, -17, -17, 4, 16, 16, 23, -15, 25, -9, -1, -20, -12, 19, 18, -25, -23, -12, 17, -3, -6, -18, -23, 13, 5, 8, -2, -20, 12, -24, 13, -18, -10, -3, 7, 20, -3, 6, 5, 1, 12, -29, 30, -16, -7, -21, -19, 26, -28, -15, -16, -13, 23, 10, -22, -11, 24, 4, -25, 19, 8, 26, 4, -11, -15, 23, 16, -4, 27, 5, 18, 12, 8, -10, 28, -7, -2, -23, -15, -28, -1, 19, -23, 16, 26, -6, 6, 2, 25, 14, -22, 26, -26, 30, 26, 15, -18, 14, 25, -5, 26, -2, -16, 23, -18, 18, 26, -10, 0, -13, 0, -24, 14, 10, -10, -30, 16, 14, -11, -16, -19, -17, 27, -5, 4, 11, 18, 30, -10, 13, -25, -2, 21, -25, -27, -29, -25, -6, 18, -14, -2, -18, -28, 4, -29, 1, -8, -10, 15, 19, 28, 11, -13, -10, 15, 5, 25, -29, -22, -15, -22, -9, -2, 5, 19, -20, 3, 12, -28, 27, -13, -2, -23, 0, 21, -5, -5, 17, -18, -24, 28, 26, 4, 2, -22, 25, -30, -23, -26, -19, 29, 0, -10, 25, 3, 4, 7, 24, 8, -5, 0, 17, 22, 9, 30, -25, 2, -18, -24, 18, -15, 17, 10, 28, 18, 30, 10, -27, -23, 26, 16, -12, -26, 8, -1, -5, -6, 30, 6, 9, 14, -26, 5, 25, 26, -7, -4, -3, -2, -22, -30, -21, -11, 8, -16, -15, 8, -13, -20, 7, -10, 23, -20, 5, -22, -1, -3, -13, -7, -21, -20, 24, -12, 8, 13, -15, 11, -11, 21, 29, -21, -8, -18, 24, 26, 24, 6, 4, -24, -9, 1, 22, 0, 11, -14, 5, 9, 17, -11, -29, 2, 20, 9, 5, 4, -27, 7, 15, -20, 24, -3, -16, -9, -25, 20, -7, -15, 15, 8, -9, -23, 28, -17, -29, 8, 28, 18, 7, -20, -30, -19, 11, 12, -7, 0, 15, -9, 25, 2, 11, -6, 8, 13, 19, 2, 21, -2, 30, -27, -18, -28, 19, 16, -18, -14, -17, -9, -19, 7, 2, -9, -11, 26, -19, -13, 14, -23, 7, 0, 20, 25, -1, 28, -17, -30, 0, -6, 27, 22, 20, -2, -25, 29, 11, -30, 24, -30, 30, -16, -7, 0, 18, 25, -5, -4, -11, 30, -9, -22, 7, 18, -10, 26, 20, 3, 15, -27, -10, -13, 17, -15, 27, -27, -17, 27, -29, 15, -14, 11, 23, -14, 29, 1, -25, -10, -10, 1, 0, 20, 20, 2, 24, 13, 11, -24, 14, -13, -12, 6, 20, -21, -9, -24, -4, -28, 6, 15, -23, -15, -14, -12, 9, 14, -8, -21, 24, 28, -25, 0, 4, -3, 29, -15, -19, -22, -23, 16, -25, 22, -12, -26, -16, -18, 28, 30, 26, 11, -25, -5, 0, 30, 7, 5, 8, 24, -17, 15, -1, 17, -19, 1, 2, 29, 10, -17, 15, -24, 10, 14, 24, -17, -26, 7, -18, 10, -5, 5, -23, -6, -12, -5, -18, -6, 15, -18, 1, 18, -20, -3, -29, 18, 29, -6, 11, -8, -4, -6, -7, 2, -26, 9, 14, -30, 4, 26, -7, -10, 26, -2, 13, 26, 20, -2, 30, 3, -21, -14, -25, -19, -2, -12, -30, 21, 1, -5, 26, 30, 12, 17, -13, -20, 7, 7, -11, -7, 30, -29, -28, -22, -16, 23, 9, -14, -9, -4, 27, 15, 0, 10, 10, -10, 7, -12, 28, 9, -21, 24, 20, 25, 2, -8, 22, -30, -23, -12, 16, -15, 8, 0, -27, -10, 15, 6, 30, 29, 19, -12, 13, 2, 18, 0, 27, 4, -24, -29, 9, -21, -18, 11, -28, -19, 18, 18, 7, -24, -21, 13, -8, -11, -13, -3, 6, 16, 5, -8, 27, -16, 12, 26, 13, 26, 29, -8, -28, -21, -2, -23, 18, 21, -27, -1, 20, -5, 23, 13, -14, -3, -5, -6, -23, 29, 10, 19, -28, -16, 30, 12, 17, 25, -23, 15, -28, 27, 5, -3, 24, -16, 7, -2, -16, 2, 3, -2, 4, 29, -16, 7, 13, -19, -4, 5, 3, -21, 1, 29, -11, -30, -27, -23, -11, 11, 30, -3, -28, 29, 9, 15, 26, 15, -14, 22, 27, 0, -5, -8, -23, 12, -30, 2, -10, -20, -2, 29, 15, 12, 21, 27, 9, -8, 17, -16, -7, -8, -9, 15, -26, -10, -10, 27, 11, -6, -5, 27, -25, 8, 27, 0, 30, -14, 10, 6, -15, -13, -13, 20, 12, -16, -3, -24, -10, -9, -22, -16, 29, 23, 17, 24, -16, 14, 9, -11, 23, 27, -21, 8, -1, 29, -19, 2, 26, -4, 25, 7, -2, -19, 
  0, 17, -18, 19, 10, 27, -23, -12, 6, 9, 10, 1, -2, -6, -26, -1, -15, -13, 7, 6, 5, -12, -12, 7, -3, -14, 26, 12, 28, 0, 2, -16, -15, 17, -15, -11, 17, 15, -22, -15, 13, -25, -20, -8, -28, -2, 25, 23, 16, 10, 13, -27, 6, -16, 19, -6, 18, -23, 13, 8, -21, 6, -10, -17, 29, -2, 5, -19, -6, -29, -12, -2, -4, 6, 6, 11, 10, 8, -3, 28, -7, 15, 17, -18, 19, -1, -5, -14, -22, 26, -20, 12, 11, -12, 28, 0, -18, 12, 30, 3, -16, -5, -18, 29, -10, 6, -23, -10, -8, 17, 13, 20, -15, 27, -14, 6, 17, 28, -25, 23, -17, -3, -25, -5, 25, 26, 29, -26, -2, 10, -16, 8, 3, 12, 16, -21, -21, -30, 29, 8, 7, 26, 5, 28, -9, 7, -10, 22, 26, -18, -16, 5, 4, -7, 19, -16, -6, -30, -7, -3, -7, 23, -9, -25, -11, 7, 21, 17, 11, -23, 29, 28, 8, 12, 11, 30, 24, -27, 4, -26, 2, 18, 29, -8, -25, -26, 5, 28, 20, 12, -13, 0, -10, -3, -14, 17, 2, 17, -12, 19, -9, 19, 14, -2, -28, -22, 28, 5, 18, -3, 9, 25, -28, -3, 1, -16, 16, 5, -6, 24, 6, 13, 19, -27, -19, -15, -3, -14, 7, -18, -6, -28, 28, -14, 5, 9, -28, 27, 1, 1, 2, -6, -29, 22, -20, -1, -23, 1, -10, -4, 17, 8, 12, 1, 22, 4, -12, -16, 3, -24, -11, 24, 18, -24, 6, -14, -27, 10, 10, -27, -13, -3, -22, 22, -18, 15, -22, 5, 26, -24, -29, -2, 26, 21, -20, -21, 17, -9, -19, -10, -14, -16, 22, -20, -21, 19, 0, -4, -7, -4, -16, 22, 1, -5, 1, -11, -27, -6, -6, -1, -24, 3, -11, -12, -2, 25, -2, -6, 9, 0, -10, 20, 29, -23, 17, 19, 4, -2, -27, 13, -6, -25, 10, -29, 17, 14, 20, -4, 13, 10, 18, 11, -21, 15, -18, 11, -9, -29, 19, 14, 18, -30, 13, -26, -4, -7, 30, -4, 29, -9, 26, 8, -30, 16, 25, 13, -4, 1, 22, 10, 23, 17, 24, -19, 6, -21, 30, -4, -5, -12, -12, 26, -1, 7, -9, -8, 9, -28, -30, -7, 9, -27, -27, -18, 15, -28, -8, 2, -9, -24, -3, 11, 18, -10, -2, 13, 19, -10, -27, 6, 27, -1, 28, 17, 1, -16, 4, -5, -24, -17, 15, -26, 23, 1, 9, 12, 1, -8, -3, 28, 19, -8, 27, 22, 29, 16, 10, -27, 0, -23, -9, -1, 28, 14, 6, 12, -18, 13, 19, 17, -10, 1, 19, -13, 7, -23, -21, -5, 1, -10, -22, -24, -6, 19, 15, 4, 12, 11, -22, 21, -16, -3, -24, 16, 15, -6, 21, 0, -11, -13, 2, -25, -17, -9, 22, 15, -24, -6, -4, -1, -13, -14, -18, -12, 25, -3, -30, -16, -7, 28, -23, 1, -2, -26, 30, 18, 27, 11, 8, -10, 19, 1, -2, -28, 19, -23, -5, 27, -29, -7, 30, 27, 30, -1, -19, 13, 16, -18, 28, -29, 15, -11, 5, -17, -2, 17, -27, 23, -12, 0, 11, 22, -1, 28, -3, 16, -8, 16, -11, -7, -9, -12, -1, 7, -8, -4, -19, -7, -24, -7, 27, 2, 15, -9, 12, 11, -20, 8, 17, 3, -14, 28, 27, 1, -30, 4, 6, -17, -18, 30, -24, 14, 3, -5, 29, -29, -2, 9, 10, -23, -7, -10, -5, 4, -12, 7, 13, 21, 11, 15, 1, 21, 3, -10, 4, 14, -8, 15, 6, -3, -1, 7, 9, 23, -23, 21, 30, 20, 5, 16, -25, 21, -12, 19, -17, -17, 20, -15, -8, -16, 25, 13, 12, 20, 5, -7, -28, 13, -11, -24, -5, 26, 5, 6, 7, -22, 28, -20, -22, 6, 1, 21, 6, -14, -6, -1, 11, 15, 24, 16, 4, -4, -26, 27, -20, 26, 4, 22, 17, 24, 1, -12, -10, -15, -3, 8, -12, 17, 3, -27, 2, 13, -16, -25, 15, 1, -27, 7, -13, 8, 8, 9, -4, -18, 26, 29, 16, 22, 8, 28, 27, 20, -8, 7, -29, 8, -22, -6, 29, 22, 27, 22, 7, -12, -2, 1, -12, 7, -15, -11, -20, -18, -14, -29, 10, 28, -6, 7, 23, 3, -26, 26, -1, 28, -13, 15, 27, 30, 19, -6, 29, 24, -30, 11, 10, -29, -11, -20, -6, 23, 4, -19, 16, 8, -4, 16, 0, -18, -14, -10, 23, 20, 6, 25, 14, 25, -23, -5, -5, -28, 8, -15, 21, -2, -14, -16, 7, 13, -12, -23, 4, -3, 10, -16, 7, -19, 25, -3, -1, -6, -29, 15, 18, 18, 18, -17, -17, -13, 30, -10, -4, 16, 7, 27, 9, -25, -18, -5, 20, 8, 3, -1, 4, 23, -18, 0, 5, 6, 10, -5, -9, -10, -17, 8, -13, -17, 5, 22, -1, 22, 21, -28, 7, -7, 29, 11, 19, -22, -3, 8, 19, -25, 13, 13, -12, 2, 12, -14, 15, -6, -8, 30, -14, -19, -6, 
  15, -17, -6, -5, -1, 11, 7, 10, -1, -25, -15, -19, 28, -14, 22, 6, -15, 11, 20, 25, -15, -28, -6, -10, -20, 14, 5, -12, 16, 10, 14, 28, 1, 27, -9, 19, -3, 8, 29, -16, -1, 8, 26, 16, -9, 19, -28, 18, -5, -3, -5, 1, -10, -13, -5, 19, 8, -12, 19, 3, -6, 0, 25, 1, 6, -1, 19, 12, 5, -22, -29, -13, -15, -28, -15, -28, 7, 30, 11, 13, -27, 7, 8, 1, 30, 28, -10, 8, -22, -8, 9, 8, -27, 6, -22, 1, 13, 28, -21, 12, 0, -2, 5, 18, 21, -17, -1, -21, -11, 2, 2, 23, 19, -5, 12, -17, 3, -13, 18, -27, -20, -6, 6, 21, 5, 15, 15, -17, -14, 27, -11, 15, -15, -17, 24, -27, -10, 8, -3, 7, -5, -1, -20, -18, 21, 27, -8, -19, -8, -15, -3, 21, -21, 22, -24, -24, 5, -24, -11, -25, 6, 13, 4, -29, -3, 26, 3, 11, -28, -24, 7, 24, 28, 18, 25, 25, 24, -7, -30, 28, 1, 18, -9, 22, 12, 24, -11, -4, 10, -3, -12, -23, -18, 24, 29, -3, 22, 28, 28, -30, -24, -28, 10, -18, 29, 0, -17, -21, -15, 9, -18, -9, -18, -23, 24, -25, -5, -18, 22, 29, 18, 14, 28, 21, -20, 19, -11, -3, -10, 22, 1, -8, 1, -3, -15, 4, 10, -25, 13, -19, 29, 22, 15, -18, 21, -4, -4, -11, 26, -6, -26, 27, 8, 17, -6, 19, 18, 2, -26, -12, -19, 28, -1, -24, -11, -18, -17, 25, 11, -18, -9, 1, -21, 9, 5, -24, -17, 5, -27, 12, 18, -19, -16, -17, -1, 7, -8, 1, 17, -3, -28, -3, -28, -13, 30, -23, 2, -15, 25, 30, -30, 23, -30, 16, 15, 1, 18, 23, -6, -21, 25, -22, -8, -22, -17, -27, 22, -4, -28, -23, 23, -24, -23, -2, 15, -6, 14, 16, -6, -21, -19, -7, 1, 11, 9, -21, 0, 9, -21, 6, 28, 6, 8, -4, 2, -6, 15, 0, -16, -19, 27, -12, 21, 15, 11, 9, -1, -17, 26, 3, -13, -14, -7, -19, 5, 21, -1, -24, 13, 4, 3, 28, -20, 30, -30, 18, -3, -18, -14, -27, 11, 28, -2, 29, -11, -29, 3, 28, 12, -4, -27, 16, -28, 5, 22, -25, -29, 0, -24, 16, -6, 6, 25, 26, 13, 0, -3, -22, -27, -29, 8, -9, -16, 7, -19, -17, 15, 18, 25, -1, 10, 14, 14, 20, -9, -3, 9, 16, -12, 10, 25, -22, 10, 12, -20, -18, 23, -5, 9, -12, -8, 1, 11, 3, -30, -17, 3, -13, 3, -24, 29, -6, 26, -6, -19, 3, 27, -25, 9, -30, -24, -20, 30, 7, -19, -4, -20, -22, -1, 24, 23, -7, -4, 3, 22, 28, -9, 24, 4, 25, -8, 1, 2, -10, -11, -23, 16, 5, 25, 11, 19, -13, 20, 12, -7, -7, 24, -25, 0, 9, -24, 3, -26, 11, -6, -13, 11, 10, 3, 30, 24, 23, -19, -26, -3, 15, -24, 30, -3, 17, -8, -9, -27, -6, -12, 17, 5, -23, 24, 3, 23, -17, -29, 6, -2, 17, -30, 26, 3, 14, 25, 17, 27, 28, 11, -23, 6, 6, 9, 25, -13, 17, -12, 12, -21, 30, 13, 7, 21, 9, -26, 12, 5, -25, 14, 15, -27, 11, -30, -12, -13, 6, -1, 21, 20, -17, -7, -25, 23, -28, 24, 1, 19, 1, -20, -8, -10, -1, 2, 7, -14, -23, -11, 10, -4, 5, -24, 9, 18, -18, -8, -21, -15, 14, 12, -6, 9, -9, -9, 3, 4, -25, -13, 28, 9, 3, 28, 29, -3, 6, -6, 25, 6, 10, 8, -29, 15, -23, 30, 22, 13, 20, -1, 2, -13, -5, 7, 3, 18, 0, 6, -9, -1, 17, 29, -28, 21, 10, 22, -20, -17, 26, 21, 2, -19, 20, -14, -21, 5, -23, -28, 26, 1, 7, 29, 29, 27, 9, -6, 1, -2, 24, 13, -15, -3, 9, -1, -27, 11, 11, -30, -21, -4, -19, 28, 18, 0, -8, -21, 29, -29, 23, -1, -29, 25, -12, -13, -8, 30, 7, -10, 15, 30, -16, 6, -16, -19, -1, -13, -16, -5, 26, 1, 21, -1, 26, -1, -19, -17, 21, -9, 19, -15, 20, 17, 6, -6, 10, -16, 7, 17, 13, -20, 25, -1, 2, 30, -2, 17, 18, 26, 12, -26, -14, -28, 8, 8, 8, 24, 5, 24, 30, -25, 7, -22, -4, 4, 8, -9, -15, 18, -22, 29, -10, -19, -29, 0, 14, 17, -7, -25, 12, 24, -4, -27, -24, 11, 12, -2, -12, -13, 16, 10, 21, 29, 0, 19, -6, 9, 22, -7, 20, 26, 12, -10, 23, 30, -2, -23, 15, -12, 4, 23, -25, 17, 0, 9, -20, -23, -3, 4, -1, -4, -4, 22, 26, 20, -15, 22, -14, 24, -3, -27, 5, -21, -3, -20, 13, 9, 11, 16, -7, 24, -3, 1, 23, -5, 18, -26, -19, -14, 24, 27, -6, -29, -17, 27, 21, 10, -23, -22, 12, 13, 28, -16, 
  -22, 27, -4, -11, -12, 9, 9, -7, -14, 16, -25, -23, -30, -21, 26, 7, -6, 14, 8, -11, 6, -4, 28, -23, 8, 1, -15, 5, 8, -8, 13, -9, -19, -3, -11, -13, 7, 21, 3, -12, 24, 1, -26, -16, -4, -1, 22, 26, 16, 13, 11, 4, 20, -11, -28, 14, -17, 13, 2, 5, 12, -8, 5, -10, -12, -26, 10, -8, -14, -4, -27, 16, -5, 13, -12, -17, 7, 9, 24, 6, 14, 4, -10, 1, 15, -16, -13, 23, 27, 2, -11, -4, 1, 23, -27, 5, 19, -21, 28, 25, 10, -3, 18, 8, -3, -23, 14, -27, -23, -5, 27, 13, 16, 16, -18, 18, -25, -29, 6, -7, 19, -6, 2, -2, -20, 6, 28, -10, -8, -12, -13, -19, -7, -6, 19, 22, -19, -27, 8, 3, 17, -17, -24, -26, 25, 19, -7, 9, 28, 8, -5, -1, 0, -7, 8, 10, -8, 12, -26, 29, -28, 21, -10, -1, 29, -15, -29, -20, -24, 14, -20, 0, -21, -2, 29, 12, -28, 1, -20, 27, 25, -24, 29, -4, -23, 24, -4, -23, -13, -2, -17, 18, -24, -22, 17, 25, -5, 20, 18, -6, -8, 25, 19, -9, -21, 26, -20, -9, -18, 30, -22, 20, -19, 20, 5, 15, -24, 18, -5, -18, -26, 23, 6, -17, 30, -20, -28, -6, 17, -23, -15, 11, -13, 15, -14, -1, -11, 3, -18, 10, -27, 14, -16, -7, 0, 18, 7, -25, 4, -15, -6, -12, 14, -24, 20, 7, 15, 14, -20, -28, 16, 14, -18, -3, 11, 27, -5, 4, 21, 7, -13, 22, 24, -4, -15, -18, 12, -5, 28, 10, 22, 17, -21, 1, -13, 6, 25, 5, 8, 24, 12, -22, 26, 30, -2, -1, 12, 7, -3, 16, -14, 29, -4, 5, 7, 24, -5, 1, 22, 20, -9, 11, -12, 10, 6, 10, 20, 9, 6, -18, -23, -1, -9, -8, -28, 28, -29, 21, 3, 0, -14, 24, -13, -15, -30, 19, -17, 13, 30, 29, -2, -19, 21, -1, -4, -7, -18, -21, 18, 21, -5, -15, -29, -9, -17, -17, -6, -17, 28, 18, -4, 15, 25, -1, -14, 5, -26, -12, 11, 30, -19, 4, 20, -8, -19, 11, 7, -7, 4, -7, -26, -23, -26, 12, -8, 28, 1, 4, -1, 9, 30, -27, 28, 18, 23, -25, 28, -30, -8, -24, -2, -8, -5, 22, -24, 9, -11, -25, -17, -8, -15, 4, -3, -21, 24, -21, 3, 14, -3, 15, 24, -15, 5, -19, -26, -29, -4, 22, -12, 0, -17, 4, -11, 2, -21, 28, -22, 16, 23, -22, 2, 1, 17, -24, -27, 16, 24, -26, -15, -23, 15, -3, 23, 18, 13, -3, 3, -18, -22, -4, 30, 25, -4, 29, 5, -30, -5, 24, 28, 28, -25, -20, 4, 20, -16, 30, -21, -12, 22, -11, 19, 26, 20, -2, -2, 22, -2, -17, 3, -3, 22, -15, 13, -12, 0, 2, -18, -10, 20, -27, 8, -5, 0, -19, -10, 18, -1, 17, -10, -27, -26, 1, -12, 28, -28, -11, -18, -1, -21, 22, 20, -19, 22, 18, 18, -15, 29, -25, -27, -10, 3, 8, -23, 9, 8, -10, -24, 15, -3, 8, 30, -6, -25, 20, 27, -13, 22, -27, 0, 17, 10, 12, -15, -21, 11, -10, 22, 16, 9, 26, -23, 0, 4, 28, -8, 30, -14, 3, -6, -12, -15, -1, 3, -30, -8, -18, -3, 21, -7, -3, 12, 18, 8, 25, -1, 14, 15, -5, 21, -8, 28, 13, 0, 18, 25, -22, 24, -8, 0, -26, -27, 22, -17, -5, -5, 14, -6, 29, -29, -9, 25, 10, 14, 22, 14, -26, -3, 17, 21, 8, 1, -23, -11, -8, 7, 8, 29, -9, 2, 21, 27, -4, -30, -5, 17, 16, -13, -9, 21, 18, 16, 28, -30, -19, -6, 29, 26, 27, -8, -16, -3, 19, 7, 8, 13, -28, 24, 27, 12, 17, -12, 14, 29, 25, -12, -4, -11, 28, -21, -2, 25, -8, -27, -16, -27, -12, 9, -29, -22, 2, 3, 19, -17, -20, -23, 1, -16, -8, -20, -1, 8, -16, 27, 28, -16, -23, -11, 9, 3, 21, -9, -22, 21, 16, 18, 5, -4, -17, 4, -1, -15, 8, 0, -16, -24, -11, 25, -25, -30, 29, 9, 6, 21, -26, 23, 27, 8, 20, 16, -10, 7, 9, -9, 26, 21, 14, -24, -28, -4, 26, -29, 2, 25, 8, -21, 3, -24, 14, 26, -4, -16, 15, -2, 12, 22, -4, 28, 5, 8, -26, 25, -11, -28, -29, -18, 5, -27, 8, 3, -11, 18, -12, 16, -25, 1, -12, -13, -15, 16, 26, 20, 25, 10, -17, 18, 19, -8, 9, -18, 25, -8, 29, 13, 2, 29, 30, 23, -5, 17, -25, 19, -13, -8, 24, 11, -10, -4, 26, -21, -25, -29, -22, 10, 15, 18, -26, 12, -11, -16, -26, -6, 19, 17, 11, 30, -28, -21, 24, -26, -15, 12, -13, 1, -18, 20, -25, -20, -1, 11, 30, -7, -18, -21, 27, 26, 0, 13, 27, 26, -20, 4, 25, 20, 30, 5, 
  -11, 29, -20, -7, -25, 28, 5, -28, 24, -23, 19, -16, -21, -13, -16, -3, 0, -23, 2, -8, -9, -24, -29, -6, -5, -26, 21, 9, 11, 21, -26, 25, -26, -15, 3, 10, -29, 7, 13, 11, 4, -27, 19, -20, -20, 23, 13, 24, 7, 1, 27, 10, -13, 28, 12, 4, 0, 27, -9, -17, -4, 15, 9, 23, -27, 10, 12, -20, 19, -17, -28, 26, -10, 29, 11, 15, 5, 2, 25, 24, 22, 26, -3, -2, -17, 10, 21, -24, -23, 28, -27, -25, -29, -27, -22, -20, -31, -22, -20, 16, -27, 0, -27, 9, -1, 7, -3, 20, 17, -5, 26, 4, 20, -13, -3, 16, 1, 24, -15, 9, 6, 27, -28, -17, -23, 27, -13, -12, -12, 21, -3, -27, -26, 1, 29, -18, 20, -7, 23, 11, -20, -1, -19, -10, 8, 9, -12, -26, 12, 20, -29, -10, 3, 13, -12, 1, 6, -6, -21, 8, 11, 21, -1, -14, -26, -29, 13, 18, -7, -18, 10, -15, 15, -19, 19, -9, 27, 3, -18, 1, -18, 1, 11, 3, 5, -18, -9, -2, 16, -29, -4, 0, 11, 10, 27, 29, 12, -13, 24, -17, -5, 28, 25, -10, -20, -27, 24, 3, -3, 10, 8, -28, -25, 12, -26, -2, 30, -3, 30, 5, 31, 19, 25, -8, 21, 14, -28, -30, 21, -8, 0, 4, 26, 15, -27, 9, -29, -8, -20, -23, -30, 24, 18, -4, 14, -25, 14, -11, 24, -4, 18, -2, 7, -20, -28, 1, 5, 17, 9, 20, 13, 27, 17, -26, 24, -17, 1, -23, -26, -6, -23, -12, 29, 29, 9, 25, 12, 8, 6, 22, 26, 6, 8, 24, 10, 21, -27, 8, -13, 17, 12, -20, 2, 10, -6, 7, 14, -20, 17, 7, 24, 25, 15, 5, -19, -9, -22, 18, 26, 21, -11, 21, -1, -13, -14, 11, -28, 9, -2, 30, -7, -2, -15, -9, 19, 10, -5, 21, -16, -11, 20, 27, -28, -7, -29, 7, 2, -13, -7, 30, -20, -28, -3, 14, 6, -27, 24, -26, -3, -6, -18, 27, 5, 8, -12, -20, -17, -2, 4, 17, -26, -27, -2, 6, -3, -10, -12, -5, -5, 21, 0, -7, 20, -19, 24, 5, 2, -16, 22, 7, -12, 12, -2, -22, -20, -21, -21, -7, -5, 15, 13, -11, 30, -12, 30, 14, 14, 28, -18, 27, 25, -14, 1, 11, 22, 21, 15, 15, -24, -2, -4, -28, -2, 25, 0, 13, 30, -15, -7, -17, 11, 18, 24, -26, 7, 29, 3, 29, 28, 19, 14, -21, -11, -29, 15, 22, 3, 28, 7, -17, -27, 29, 13, 4, -7, 8, -11, 21, -8, 15, -4, -12, -15, -29, 2, 15, 4, 23, -28, -4, 1, -24, -23, -23, -26, -26, 30, -23, -22, 16, -20, -16, 23, -19, 30, -1, -3, 24, -30, 29, -17, 8, -20, 4, 9, 15, 13, 25, -29, -22, 29, -12, 0, -30, 11, -24, 24, 11, 11, 29, 11, 2, -19, 0, -18, -6, 21, -25, -29, 15, -23, -19, -4, 21, 9, -22, 15, 5, -28, -11, -26, -30, 2, 17, 22, 4, 18, 28, -1, -17, -5, -6, 30, -5, -17, -16, -24, 2, 21, 18, -29, 22, -7, 18, -9, -26, -10, 3, 6, -6, 6, -13, -9, 29, 19, 14, 12, -21, -29, -3, 3, 4, -10, 2, 16, -25, -9, 11, -3, 4, 0, 14, 25, -9, 7, -7, 0, 20, -24, -13, 13, 18, -12, 11, -1, 9, 3, -18, -26, -10, 8, -4, -25, 1, -25, -2, -27, -27, 19, -3, -23, -1, -4, -19, -13, -27, 28, 26, -13, -30, -2, 17, 20, -17, -30, -27, 1, -24, -8, 0, -3, 13, 6, -5, 0, -3, -17, 15, 18, -5, 12, 11, 7, 11, -20, 21, 23, -11, 29, 14, 0, -26, 13, -12, 14, -21, -17, 24, 29, 25, 7, -24, 6, 30, -21, -18, 9, -9, -18, 24, 14, 5, -20, -27, -27, -16, -31, 9, 29, -8, 22, 5, 2, -26, 9, 25, 1, 16, 24, 28, -5, 27, -6, -12, 11, 13, 28, 2, -17, 10, -16, 30, 18, 13, -23, -12, 6, 27, 19, 4, 1, 3, -16, 12, 27, -3, -26, 18, -8, -9, 14, 16, -20, -12, -25, 29, 4, 7, 17, 16, 29, 27, 17, -12, 28, -29, -22, 13, 29, 16, -27, 7, 17, 19, -18, -19, 17, 28, -25, -27, -11, 17, -16, 2, -17, -6, -22, -25, -16, -9, 17, 13, 17, 1, -20, -8, 29, -25, -23, -2, -10, -30, 26, 7, -18, 1, -7, -17, 17, 0, 10, -28, 11, -11, -2, 5, 11, 6, 6, 15, -20, 5, -22, -10, -24, -20, 3, -3, -21, -1, 11, 14, 15, -12, 18, -14, -22, 13, 15, -20, -29, -11, -16, -8, 20, -15, -6, -16, 30, 2, 9, 14, -6, 13, 23, 1, -4, -24, -13, 20, 6, -24, -8, 3, 23, 26, 8, 31, 5, 7, 28, 17, 19, -15, 24, 27, -9, 26, 25, -17, -3, -3, 30, 24, -12, -13, -25, -19, -23, 12, 1, -11, -10, 16, -24, 
  -30, -101, -67, -23, 43, 11, -13, -9, 9, -27, -33, 26, 0, -14, -32, -21, 3, -7, 20, -2, -5, -10, -7, -17, -14, 25, -27, 6, 23, -1, -11, 11, -12, 13, 22, 11, -3, 5, -24, 8, 15, -25, -22, 18, -11, -2, 19, 10, -26, 22, -31, -20, 9, -19, -6, 3, -22, 14, 22, 13, -1, 26, -12, 34, 29, 30, -26, 9, 5, -27, 15, -16, 17, 34, -16, 33, 20, 24, 34, 6, -3, 4, 33, 2, 27, 9, 24, 21, 22, 3, 32, 2, -22, -2, 7, -61, -61, -83, 29, -12, 19, 13, 6, -35, -27, 5, -2, -32, -8, 4, -10, -16, -31, -19, 17, -28, 9, -37, 9, 7, -19, -6, 14, -33, 11, -30, -26, -21, 11, 21, -19, -34, -17, 3, 1, -29, 10, -6, 3, -24, 2, -26, -12, -26, 4, 1, 8, 17, -20, -22, 17, 24, -2, -8, -18, 19, -25, 10, -8, -22, -9, -12, 3, -10, -2, 16, -14, 3, -25, -12, -23, -16, -29, 6, -11, -28, -31, 17, -2, 14, 15, 10, 8, 19, 18, 0, -8, -24, 25, 13, -75, -7, -67, -14, 24, -16, -9, -25, 25, 26, 15, 0, 5, 6, -9, -11, -7, -4, -28, 24, -33, 6, 7, 19, -4, 10, 0, -12, 22, -16, -14, 19, -9, -22, -25, -19, -24, -38, -26, 13, 14, -24, -8, 17, 9, -7, -5, -30, -29, 4, 18, -26, 0, -33, 7, -21, 5, -14, 17, -28, -13, -21, -28, 6, 14, -23, 6, -1, 7, -3, -5, -13, -27, -27, 18, 27, -17, 2, 21, 0, 6, 5, -7, -25, 0, 22, -21, 27, -16, 21, -12, -8, 8, 2, 33, -83, 34, 28, -25, -50, 24, 27, -3, -4, 12, 2, 10, 2, -7, 20, -32, -34, 9, 19, 17, -22, 20, -27, 23, -29, -6, -20, -26, -19, 8, -13, -2, -14, 17, 26, -5, -26, -24, 9, -25, -27, 16, -27, -20, -12, 24, -19, 20, -26, -19, -11, -37, 21, -28, 1, -3, 14, -4, -17, -24, 20, -6, -1, -33, 14, 13, -9, -29, -23, 14, 19, 4, 2, -16, 19, -27, 22, -26, -11, -18, 1, -11, -36, -33, -12, -10, -30, -20, -4, -5, -31, 15, 16, 18, 5, -39, 30, -14, -5, 9, -21, 17, -5, -20, 1, 3, -13, 28, 16, -18, -9, -12, 20, 13, 16, 13, -2, 26, -2, 14, -23, -11, 32, 14, -11, 15, -17, 17, 10, 34, 34, 6, -14, 2, -19, -9, 10, 7, 31, 20, -8, -10, -5, -5, -2, -9, -4, 18, 26, 13, -14, -10, 24, -9, -14, 8, 10, 10, 15, -10, 3, 17, -3, 23, 28, -1, 28, 20, -7, -22, -25, -2, -26, -24, -11, 6, 18, -10, -1, -14, -12, -11, -30, 2, 23, -6, -4, 27, -2, 15, -52, -26, -59, -36, -7, -16, -2, 27, -20, 15, 22, -30, -3, -26, 25, 11, -3, 20, 6, -7, -30, 5, 18, -31, -23, -21, -6, 24, -35, -5, 15, 11, -10, 27, -28, -24, 29, 13, -12, -20, -16, -25, 17, 22, -11, 19, 21, -9, 30, -10, 39, 11, -14, 9, 31, 1, -12, 13, -6, 8, -32, -19, -30, 9, -23, 7, -23, -1, -7, -24, -14, -25, -34, 18, -19, -27, 15, 21, -26, -25, -2, -19, 30, 13, 22, -20, -31, 14, 18, -24, -36, -24, -35, -25, -35, -27, -116, -62, 19, 10, 3, 17, 2, 28, 3, -5, 6, -13, -10, -16, 24, 29, -20, 7, -15, -18, 19, 22, 5, -11, -31, -12, -3, 15, -23, 13, 1, -7, -14, -21, 13, 25, 11, 4, 18, 15, 2, 18, 33, 4, -14, 8, 13, 3, -4, 7, 14, 21, -3, -30, 23, -7, -9, 4, -13, -11, 20, -21, 15, -11, -2, 22, 35, -4, -6, -25, 1, 20, -15, -11, 15, 13, -8, -7, 26, 6, 20, 2, 21, -14, 22, -1, -24, 29, 6, -5, 5, -24, -7, -16, -26, -91, 88, -19, -52, 7, -3, 2, 33, -24, -1, -24, -2, 6, 10, -5, -4, -22, -23, 8, -25, 3, -4, 25, 17, -10, -16, -7, -22, 23, 18, -9, -6, 25, 5, -9, -14, 1, -3, 16, 10, 21, 14, 22, 20, -26, -24, 29, -20, -21, 23, -3, 10, 4, 5, 18, -30, -18, 15, 9, 23, -31, -5, 0, -10, -19, -2, -17, -25, -23, 7, -18, -18, 9, 2, 17, -29, 32, -10, 6, -26, -21, -5, -4, 25, -21, 15, 13, -26, 32, 21, -25, 17, -15, -15, -82, -122, 57, -18, -22, 1, -19, -10, 28, 15, 8, 0, 8, -23, -19, 23, 11, -25, -3, 13, 31, 30, 25, 4, -22, -19, 6, 6, 20, 14, -25, 17, 8, -25, 15, 14, -17, -27, 6, -23, -2, -37, 3, 8, 19, 11, 24, 11, -10, 16, 16, 33, -20, 32, -25, -12, 4, 14, 23, -12, -12, -6, -5, -25, -6, 1, -19, 31, 30, -21, 8, -7, -12, 34, -9, 28, 5, -9, 17, 6, -3, 10, -10, 3, 28, 26, 24, 12, -16, -8, 6, -8, -10, 7, 28, 
  37, 106, 64, 13, -44, -1, -2, -11, 15, -5, 1, -10, -15, -2, 2, -14, 7, 26, 23, -25, 18, -20, -3, 24, 22, -23, -11, -20, 24, 15, -26, 7, -4, -25, -8, 22, -7, 19, -5, 19, -24, -15, 14, 17, 9, -23, 22, -1, -8, 22, -10, 26, -22, 25, 16, -34, -28, -18, 10, 2, -23, -17, 22, -26, 21, 19, 21, -24, 15, 7, -3, -19, -22, -1, 5, -7, 10, 10, 2, -31, -13, -37, -26, -6, -43, 1, -21, -23, -3, -8, -35, -1, 9, -29, -23, 63, 52, 14, -11, -22, 7, 6, 9, -14, 0, -5, -21, -13, -18, 34, -16, 6, 13, -20, -13, 10, 30, 0, -14, 35, 16, -2, -10, -19, 17, 5, 15, 0, 6, -20, 26, 25, 31, -24, -17, 36, -10, 25, 30, 14, 15, 36, -19, 22, -6, 15, -4, 9, 5, -5, 18, -15, 3, 12, -22, -8, -22, 31, 6, 29, 19, 4, -2, 8, -25, -28, 25, 3, -5, -20, -24, 31, 5, -17, 5, 34, 27, -10, 6, 10, -23, -20, -16, 31, 5, -14, 20, -1, -18, 12, 41, -16, 29, 15, 7, -17, -9, -9, -6, -1, -28, 3, -24, -19, 11, 16, -28, -4, 25, 20, -21, -2, -22, 21, 12, 11, -15, -18, -10, -13, 3, -25, 33, 32, 29, 19, 12, -5, -22, 9, 11, 20, -11, -2, 25, 26, 1, 28, -3, 11, 5, 22, 3, 28, -15, -1, -23, -27, -1, 5, -24, -17, 2, -6, -10, -15, -10, 26, 18, 18, -29, -3, -25, -20, -1, -19, -14, 14, 21, 7, -29, 27, 6, 1, -6, -25, -18, -25, 22, -4, 15, -23, 20, -9, -23, 83, -18, -45, 20, 42, 14, -19, 16, 1, 26, 18, 10, 9, -11, 12, -18, 13, 35, -7, 19, 0, 5, 33, -8, -18, 18, 11, -18, 11, -15, 3, 31, 5, -24, 20, -11, -28, 2, 2, -18, -12, -2, -5, 8, 23, 2, 28, 24, 38, -5, 7, 36, -8, 20, -11, 4, 14, 2, -17, 12, -12, 14, -21, -25, 19, 13, 13, -4, -4, 29, -28, 10, 26, 3, -6, -16, 17, 9, 26, -25, -22, 8, -23, -20, 11, 22, 28, 6, -14, 15, -29, 16, -18, 20, -30, 48, -67, -8, 21, 21, 16, -25, -17, 14, 6, 11, -13, -2, 28, 5, -23, -8, 1, 2, 13, 12, 1, -27, -7, -10, -31, 1, 26, -8, 13, -13, -23, -4, -17, -10, -9, -20, 21, -35, 3, -26, -7, 21, 19, 20, -25, 13, 8, -16, 11, 25, -28, -3, -9, -16, -6, 22, 17, 10, -23, 7, 3, 28, -8, -26, 2, 20, 29, 19, 6, 5, -11, 20, 1, -3, -3, 12, -13, 0, 0, -7, -18, -25, 25, 22, -21, -18, -10, -17, 20, 25, 13, 8, -4, -1, 52, 61, 31, 5, -7, 5, -23, 5, 2, -29, 11, -15, 1, -13, -16, 13, 34, 2, -7, 23, 31, 9, -14, -17, -5, 32, 30, -10, 21, 1, 31, -9, 24, 2, 30, 29, -4, -24, -6, 27, -20, 13, -1, -2, 19, -5, 19, 20, -21, -28, 7, 16, -12, -18, 18, -12, 8, -30, 12, 30, 12, -15, 16, 0, -16, 3, 7, -15, 15, -11, -13, 19, 24, 36, 28, 11, -24, -11, 19, -23, -24, 1, 21, -10, 29, 19, -15, 27, 32, 28, -14, -6, -22, -23, -2, 75, 78, 57, -28, 9, -33, -8, 3, -1, -25, -1, 16, -32, -25, 16, -17, 18, 8, -14, 17, -16, 21, -13, -11, 4, -27, 5, 13, -17, -14, 9, -26, 22, 12, 17, 20, -10, 15, 9, 23, 6, -9, -28, 4, -1, 5, -15, 14, -2, -11, -13, -16, 3, -1, -19, -22, -6, 18, -33, 19, -25, 24, 21, 13, -33, -3, 18, -16, -11, 17, 21, -28, 3, -12, -6, -18, 14, -32, 11, -29, 24, -15, -22, -17, -23, 24, -28, 11, -7, 23, -21, -16, -14, -12, 9, 45, 81, -119, 36, 8, -25, 22, -37, -17, 20, 5, -5, -4, -26, -18, -19, -14, 20, -15, -11, 7, 0, -15, 21, 18, -7, -10, 3, 27, -1, -22, 18, -27, -4, 7, -19, -8, -5, 26, -28, 16, -12, -8, 20, -17, -24, -6, 7, -34, 24, 10, 18, -25, -2, -32, 24, 12, -22, -26, -5, -20, 17, -11, -14, -29, 13, 2, -21, -26, -3, -1, 4, 3, -10, 0, 19, 8, -4, 10, -24, -2, -35, -5, 18, -34, 20, 18, 24, -33, 6, 9, -10, 4, 18, 16, 41, 116, -93, 34, -17, 5, -16, -16, -26, 16, -18, -32, 16, -23, -2, -17, -31, -12, -14, 19, -24, -8, -27, -3, 13, -9, -1, -7, -5, 10, -10, 10, -16, 17, 17, 7, -16, -17, -14, 36, -7, 17, -16, 11, -16, 30, 27, 17, -26, 9, 11, -18, -18, 6, -15, 16, 6, 23, 0, -3, 22, -23, 1, -34, -14, 8, -25, 18, -29, -36, -33, 17, -28, 14, -8, -34, -16, -30, 14, -26, 4, 2, 3, -4, -32, -1, -20, -7, 13, -6, -36, 20, -1, -7, -16, 
  -25, -26, -27, -24, 27, -9, 11, 0, 5, 21, 3, 27, 7, 26, -2, -21, -18, 19, -8, -2, -15, 3, 20, -26, -12, 11, -21, 18, 12, -24, 30, -4, -27, 1, 27, 12, -10, 5, -18, -2, -11, 3, 25, 27, 11, 20, 7, 19, -11, -27, 28, -13, -23, 2, 19, -18, 5, 26, -28, 29, -16, 7, 19, -25, -21, -14, 26, -7, -28, -14, -11, -4, -16, -14, 10, -13, -23, -25, 17, 20, 22, 28, -15, -24, -20, 17, 17, -16, 14, 21, 21, -5, 10, -1, 7, -16, 24, -3, 23, 23, -17, -8, 2, 19, -28, 11, 31, 30, 28, 17, -1, 14, -19, 11, -23, -11, -20, 19, 21, -28, 14, -3, 27, 10, 13, 17, -10, -10, -10, -28, -12, -14, -9, -21, 15, 22, -3, 6, 12, -11, 16, -14, -7, -23, -5, 4, -5, 26, -22, 17, 14, -12, -19, -12, -10, 16, -19, -19, -23, 19, 17, -14, 0, 15, 22, 16, -13, -14, 8, -5, 19, -24, -14, 7, 16, 19, 15, 2, 16, -11, 11, -4, -16, -10, -12, -9, 14, -23, 20, -21, 28, 20, -27, 16, 24, 10, 7, 19, 0, 28, 4, 12, 27, -5, -6, -14, 24, 10, 17, 21, 23, -8, 8, -20, -25, -3, -2, 24, -13, 11, 2, -5, -4, 7, -12, 8, 27, -4, -10, -19, 13, 9, 1, -5, -15, -12, 22, 19, -20, 26, -1, -8, -12, 15, 26, 8, 4, 27, 15, -9, -11, -2, -18, 25, -27, -8, 23, -11, 5, 19, -4, 0, 15, -3, 10, 4, 17, 9, -6, 10, -14, -11, -18, 29, -6, 25, 25, 7, 2, 18, -1, 15, 8, 25, 19, 9, -19, 17, 9, -28, 24, -3, 5, -7, 18, 15, -18, 17, 18, 1, 8, -15, -16, -13, -26, -4, 16, -2, 5, 28, 5, 8, -26, 22, -25, -16, 22, -5, -2, 9, -25, 3, -21, -2, 12, -8, -19, 6, 15, -22, -20, -13, -28, -1, -24, -26, 30, 3, -24, -23, -2, 6, -4, -10, 30, 12, -16, -19, -1, 31, -4, 30, 28, 16, -20, -5, 0, 31, 14, 30, 27, -6, 30, -12, -3, 10, 19, 22, -11, 21, 22, -23, 21, 28, 3, 24, -6, 20, -26, -14, -15, 27, 31, -12, -12, 7, -15, 31, 21, -27, -8, 14, -21, 1, 7, -17, -11, -28, -26, -25, 15, -22, 15, 27, -10, 30, -27, 14, 19, 10, -11, -2, -14, -14, -3, 0, -1, -2, 27, -5, -4, -6, 6, -3, -1, 26, -21, -23, 1, -3, -19, 28, 32, 29, -10, -27, 17, -28, 11, 26, -14, 2, 29, 8, -22, -17, -16, -26, 21, 6, -22, -15, 14, 10, -26, 18, 8, 18, -23, -4, 0, -23, 27, 4, 8, 24, 17, -2, 7, 0, -8, 11, 17, -22, -18, 9, 8, -18, 16, -5, 7, -26, 8, -1, -19, -4, 12, 19, -7, -11, -6, -18, -8, 12, -18, 21, 2, -28, 5, -13, -24, 31, 6, 18, 31, 12, -3, 7, 2, -27, 17, 13, 30, 7, 32, -15, 28, -7, 7, -26, 27, -11, 6, 29, -6, -26, -24, 0, -21, -25, 18, 5, 3, -25, -21, 20, -24, -18, 24, 7, 30, 2, -25, -2, 13, 6, -9, -22, 22, 15, -22, 5, 6, 26, 19, -14, 11, 16, -17, -9, 16, -18, -3, -27, 16, 2, 6, -4, 27, -7, -23, -8, 30, 21, -10, 19, -22, 17, -4, 28, 1, -24, 17, 12, -16, -27, -10, 16, -27, 1, 14, -27, 6, -28, -20, 13, 7, -19, 23, -28, -11, 1, 24, 7, -17, -22, -15, 5, 7, 9, -19, -11, -21, -19, -7, -26, -1, 5, 28, -6, -12, 25, 20, 20, 15, -9, -5, -9, 25, -28, 22, 1, -9, 13, -20, 13, 24, 21, 8, 2, -28, -26, 21, 2, -16, -26, 3, 24, -3, -14, 8, 11, -12, -7, 6, 4, -22, -12, 7, -29, -1, 11, 16, -11, -8, 29, -21, -15, -14, -27, 15, -16, -11, -28, 30, -16, 25, 27, -8, 5, 7, -25, 16, 10, -23, -28, 12, 22, 13, -16, 13, 13, 4, -2, 25, 6, 9, -21, 8, -13, -25, 30, 12, 5, -6, -22, -16, -4, -10, 3, -3, -18, -1, 15, 4, -6, -28, 3, -8, 10, 10, 6, 11, -1, 29, -12, -15, -16, -10, -4, 7, 26, 6, 11, 29, -3, 5, -13, 9, 17, -13, -17, 23, -28, -9, -16, 5, 6, -24, 28, -14, 11, -15, -22, 4, 19, -20, 4, 12, 1, 9, -8, 5, 12, 9, 11, -29, 10, -26, -11, -5, -28, -13, -4, -25, 2, 13, 0, -23, -8, -17, -6, 27, 13, 2, 16, 20, -19, -9, -20, 2, -22, -22, 15, 25, -19, 24, 30, 16, 14, -3, -29, 7, 14, 14, 23, 29, -3, 17, -20, 8, -1, 21, 1, 4, 14, 16, 18, -18, 8, 15, 1, -2, 8, 29, -28, -25, 13, 20, 31, -15, -24, 31, -10, 8, 4, 17, -26, 4, -18, -19, 7, -10, -17, -23, -28, -18, -29, 15, 16, 13, 25, -15, 6, -22, 
  -17, -100, -72, -2, 24, 28, 6, 19, 21, 26, -8, 23, 3, -21, -19, 12, 3, 17, 23, 21, 15, -12, -1, 7, 21, -21, -7, 24, -19, 19, -25, 13, -18, -9, 24, -21, 27, 17, 26, -11, -11, -8, -30, -28, -27, -6, -33, -4, -5, 2, -7, 0, 28, 34, 33, -11, 28, 17, -23, 19, -2, 1, 24, 9, 7, 24, 27, -11, 16, 19, -16, -10, 6, 35, -3, 15, -11, 21, -6, 6, -11, 3, 27, 40, 21, 4, 34, 41, -2, -13, 8, 31, 17, -13, -20, -101, -58, -29, -9, -18, -31, -13, 16, -29, 6, 11, -25, -2, 12, -13, -6, -10, -33, -25, 4, -10, -21, 23, -30, -26, 11, 17, 9, 13, 17, -1, -8, -37, -26, 15, 24, 16, 10, 1, 1, 17, -14, 14, 7, -19, 15, -38, 15, -5, -16, 16, -14, 5, 1, -30, 6, -34, -27, 18, 0, -4, 6, 13, 3, 17, -25, -14, 23, 28, 25, -7, -20, -27, 17, -21, -10, 5, -1, -21, 11, -32, -37, 1, -27, 13, 1, -28, -29, -30, 14, -25, 1, -23, -8, -3, -59, 29, -29, 19, -19, -16, -1, 7, 22, -12, -18, -31, -14, 12, -13, 4, 10, -13, 25, 6, -33, 6, -31, -3, 9, -14, -15, -34, 0, -8, 9, -36, -28, 1, 15, -12, -37, 5, -23, -25, 11, -40, 0, 16, -4, -9, -26, 11, 14, -8, 2, -21, -35, 8, -17, -1, 16, 18, -15, 20, -13, -1, 29, -10, -29, 17, -26, -2, 13, -16, -25, -9, -15, -3, 20, 2, 25, -15, 26, -9, 10, -27, 18, 29, 14, 29, 23, 28, -3, 6, -23, -6, -14, 7, -5, -59, 30, 25, 5, -44, 9, 8, -11, 0, 1, -7, 16, -35, -34, -25, 2, -24, -10, 1, -23, 5, -33, -23, -3, -7, 6, -31, 14, 3, -22, 4, -2, -18, 1, -20, -23, -18, -24, 9, -27, -32, 19, -11, -15, -15, -27, -25, 18, 0, 11, 17, -14, -22, -35, 10, 11, 11, -20, -8, 13, -3, 24, -31, 6, -24, 17, -7, 15, 23, -21, -33, 24, 15, 23, 4, -15, -11, -16, -34, 12, -10, 2, -25, 15, -22, 13, -20, -10, -30, 14, 11, 0, 9, -21, -24, -97, 46, -44, 1, 29, -27, 28, -4, 24, 31, -3, 9, 15, 8, 20, -3, -28, 16, -3, 18, 29, 8, -19, 28, -6, 12, 15, 30, -6, -7, 14, 28, 23, 26, -24, 4, -16, 2, 9, 26, -11, -1, 15, 24, 33, -3, -9, 32, -22, -3, -28, -17, -4, 8, 18, -30, 1, -16, -16, -32, 29, -7, -9, -18, -29, 27, -22, -1, 15, 27, 6, 28, 15, -32, -23, -27, -32, -2, 2, -4, -29, -19, -18, -22, -21, -24, 11, -19, 23, 15, -5, -31, -12, 25, 0, -88, -76, -46, -19, -32, 1, 24, -17, -24, 19, -12, -9, -25, -5, -21, 11, -12, 2, -33, -2, -35, 23, -29, 3, 18, -34, -29, -17, 9, 15, -12, -11, -26, -6, -13, -13, 9, 26, -28, 16, -3, 23, -27, -14, -11, 23, 21, -7, 15, 28, 7, -15, 23, -16, -22, 28, -25, -21, 18, 7, 27, 20, 0, 21, -2, -12, -34, -9, -25, -14, -38, -22, 2, -19, 0, -9, -11, 10, 8, 14, 2, 22, -12, 23, 20, 12, -35, -4, 19, 2, 18, -8, -15, -19, -30, -75, -112, -42, -26, 28, 16, -6, 20, -13, -19, 18, -21, -17, 11, 4, -19, -2, -27, 26, 20, 7, 14, 5, -26, 19, 5, -12, -13, -23, 5, -8, -19, 6, -22, -14, -23, -25, 31, -14, 29, -9, -9, -18, 16, -21, -18, 33, -2, 32, 2, 11, 23, 27, 21, -24, -1, -5, -2, 3, -16, -4, -16, 17, 25, -8, 34, -5, -15, 11, -19, 4, 6, 24, 27, 4, -6, -9, 11, 24, -8, 25, -11, -31, 4, -25, -14, 27, -27, 4, -9, -20, 16, -5, 31, 18, -49, -108, 106, -38, -17, 19, 16, -8, -18, 5, 17, -6, 0, 26, 32, -11, 1, 30, 17, -14, -16, -11, 25, -6, -28, 2, 6, -2, 9, 10, -18, -31, 24, -24, -28, 26, 22, -8, -11, 25, -4, -2, -14, 13, 32, -11, -14, 5, 3, 19, 24, 30, -5, -17, 6, 28, 26, -13, -26, -9, -20, -27, -6, -17, 18, -24, 17, -29, 29, 4, -6, -28, -1, 11, 2, 19, -12, 20, 9, -6, 16, -6, -7, 31, 3, 18, 18, 10, -4, 18, -23, 27, 2, 6, 5, -71, -78, 77, 18, 26, 36, 3, -9, -10, 9, -10, 31, 31, -19, -14, -10, -18, 18, 9, 7, 6, 3, 23, 8, -18, 10, 0, -12, -19, 3, -12, -19, -26, -3, 13, -19, -3, -30, -1, 10, -28, -13, -4, -4, -25, 25, 20, 23, -6, -19, 33, 2, -15, 5, 10, -8, 13, 21, 29, -14, 30, 4, 3, 22, 15, -15, 32, 30, -24, 37, -5, -8, 29, -19, 26, -11, -2, -16, 5, 42, 1, -5, -5, 27, 1, 41, -18, 4, 38, 8, 8, 17, 2, -8, 29, 
  10, 19, 6, -18, 22, -9, 9, -12, -3, 29, -1, -14, -21, 26, 28, -28, 16, -1, -28, -5, -27, -5, 28, -4, -24, -2, -21, 10, 25, -12, 21, -9, -9, 26, -25, -16, -15, -2, -21, 29, -6, 8, 6, 24, -2, -12, 19, -12, -4, 13, -8, -9, -9, -22, 25, 21, 22, 2, 19, 13, -22, -16, 11, -3, -6, 20, 28, 26, 27, -23, -28, -23, 9, -2, -24, 22, 2, 10, -15, 13, 4, -2, 27, -3, -17, 20, -18, -5, -3, -8, 25, 16, -22, 8, 4, 26, -31, 16, -26, -25, 22, 30, -6, -17, -9, 24, 9, -3, 15, -2, -17, 18, 6, -14, -2, 27, 9, 12, 23, -28, -10, -1, -4, -18, -7, 22, 17, -22, -17, -2, -3, -22, -8, 8, 27, -21, 21, 21, 17, -5, 8, -29, 31, 19, 15, -1, -25, 28, 27, 27, 27, -12, 0, 13, 16, -7, 24, 28, -8, 22, 16, 18, 25, 10, -17, 1, 29, 18, 10, 17, -13, -15, 23, -20, 2, 13, -28, 25, 23, -22, -4, -29, 6, 2, -7, 12, 19, 14, 25, -14, -22, -1, 27, 11, 22, 12, -2, 29, -15, -3, 21, 31, 18, 0, -20, -29, 14, -22, -23, 24, 12, 26, 22, -14, 26, -4, 16, -29, 25, 5, -8, 7, -26, -23, 27, 13, -27, 17, -15, 8, -7, 28, 23, -19, -19, 2, -27, 0, 2, 6, -27, 28, -24, -15, -1, -12, 22, -5, 7, 9, 4, -28, 3, 6, -13, 25, -19, 26, -22, 10, 25, -23, 8, 26, 16, 23, -2, 10, -25, -12, 20, -15, 20, -9, 7, -16, 21, 5, -14, 18, 9, -6, 19, 25, -1, 21, -15, -23, 11, -5, 15, 8, -24, 0, 30, -22, 12, -26, -12, -29, -7, -21, -21, -4, -8, 27, -5, 31, -1, -26, 11, -9, 31, -22, -23, -6, 16, 5, -26, -3, -25, -24, 9, -27, -24, 0, 29, -12, 8, -18, -1, 1, -4, -2, 30, 6, -25, 15, -15, -18, 27, -26, 17, 24, 20, 9, -5, -3, -12, 5, 27, -14, -27, 8, -7, -29, -26, 11, -29, -4, -24, -12, 18, -22, -18, -11, -14, -6, -1, -22, 21, -13, -22, -7, 14, 1, 11, -1, -11, 21, 11, -26, 5, 18, 4, -11, 27, 10, 23, 12, -4, -7, 8, -29, 26, 22, 10, 0, 3, 7, -3, 23, 4, -22, 23, -9, -26, -13, 6, 9, 27, -14, -6, -9, -9, -12, 19, 3, -12, 10, -23, 10, 15, 18, -7, -24, -24, 26, 25, 28, -13, 12, 22, 26, 13, 16, 16, 12, 31, -9, 25, 21, 25, 22, 20, -8, -19, -27, 17, 24, -1, -7, -8, 9, 27, 21, 21, -11, 8, 3, 11, 18, 26, -12, 19, 23, -10, -4, -12, -22, 30, 11, -14, -12, -3, 3, -9, 4, 27, 0, 4, 18, -5, 4, -18, 15, 28, 18, 6, 9, 21, 20, 9, 5, 27, -5, -7, 24, -18, -22, 30, 18, 9, 30, -10, 25, 4, -19, -2, -12, -15, -16, 20, 5, -29, -20, -17, -17, 17, 13, 8, -22, 13, 6, -29, 14, -26, -5, 14, 12, 31, -2, -21, 8, -21, 31, -18, -2, 19, -22, -25, -12, 11, -7, 26, 21, 1, 8, -10, 12, 5, 16, -8, -26, 23, 11, -16, -1, -2, -16, -17, -22, -8, 17, 9, -28, 6, -14, 16, -20, -4, 20, -17, -30, -1, 23, -22, -4, 1, 3, -1, -27, -11, -16, 7, -10, 22, -28, 20, 15, 11, 7, -14, -1, -18, 9, -14, 29, -18, 4, -14, 11, -2, -27, -8, 13, -6, -28, -10, -16, -13, 28, 26, 18, -26, 29, 3, -8, 4, 7, 13, 4, -22, 6, -29, -13, 5, 3, 23, 27, 31, -15, 19, -8, 18, 7, -20, 15, 13, 15, -5, -29, -13, 24, -14, -2, -15, -23, -24, 5, -4, -5, 2, 7, 15, -17, -1, 3, -16, -14, 19, -8, -9, 9, 23, -23, 1, 24, 10, 18, -5, 27, -18, -20, 20, 9, -15, 8, -16, -19, -4, 28, -1, 9, 16, 19, 0, -28, -23, -17, -8, -27, -10, -20, 1, 17, 10, -5, -20, -21, -18, 23, 16, 16, 9, -13, 31, 5, 4, 15, -7, 3, -25, -26, -10, 12, -28, 8, 3, 11, 24, 19, 19, 9, 28, 1, -13, -26, -18, -11, -18, 24, 27, 8, 8, -8, 26, -4, -5, -28, -23, -13, -17, -15, -21, 10, 9, 13, -14, 14, -24, -21, -29, 21, 24, 12, 29, -26, -1, 24, 17, 19, -14, 26, -8, 31, 24, -16, 15, 2, -26, 30, 6, -11, 1, -21, 18, 6, -27, -6, 19, -25, 3, -9, -27, 21, 20, 27, 19, -9, -3, 30, -20, 7, -17, -29, 1, -24, -18, 9, 11, 25, -11, -20, 30, -10, -3, 18, 12, -4, -22, -18, -6, -14, -15, -10, 16, 27, -25, -16, -14, 0, 16, 7, 8, -21, 28, 31, 14, -16, 27, 16, 27, 24, 7, 0, -26, -18, -15, 10, -7, 13, -10, 1, 0, -26, -21, 26, 12, -21, -26, -21, 10, 13, -11, 
  -38, -99, -76, 23, 24, -9, 13, -8, 7, 21, 28, 25, 13, -13, 0, 6, -18, -16, 8, 24, -30, -11, 12, -12, -30, 24, 16, 5, 26, -13, -29, 32, 10, 16, 23, 17, 29, -16, 19, -26, -8, -2, 20, -10, -19, 0, -20, -6, -4, 26, -19, -16, 0, -3, 23, 21, 10, 33, -22, -8, 4, 6, 34, 1, 4, 24, 16, 26, -25, 31, 28, -19, 5, 17, 34, -16, 20, 17, 0, 42, 20, -3, 30, 10, 32, 29, 32, -5, -10, 39, 3, 27, -12, 1, 20, -78, -35, -22, 19, 24, -26, -5, -14, -35, -5, -23, 9, -10, -35, 22, 20, -31, 13, -4, 3, -25, -22, -37, -28, -24, -28, -3, -25, -6, -33, 1, -16, -5, 8, -19, -23, -7, 18, 11, -16, -23, -22, -6, -9, -26, 20, -32, -16, -29, 2, -7, -32, 10, 22, -12, 1, -13, -28, -30, -16, -1, 10, 15, 11, -7, 8, -16, -25, 15, -27, 15, -25, -26, -1, 6, 15, -1, 2, -34, 24, 14, 24, -19, -1, -25, 11, -11, 14, -19, -1, 14, 28, 25, 15, 7, -89, -11, -26, -29, 4, -24, -6, -30, 20, -32, -3, -6, 26, -17, 24, 25, -24, 26, 27, -33, 9, -12, 13, -13, -13, 12, -11, -24, -34, 5, 0, -37, 5, -22, 6, -15, 18, -7, -31, -17, -32, -11, -11, -1, 16, 9, 19, -38, 0, -24, -10, -34, 17, 13, 24, -7, -3, -35, 26, -19, 13, 7, 1, -3, -2, 26, 6, 1, 16, -8, -4, 13, 26, -3, -4, 15, -26, -6, -24, 16, -24, -17, -1, 24, 29, -2, 10, 17, 25, -13, 29, -13, -9, -16, 5, -58, 2, 17, -36, -23, -7, 3, 11, -3, 16, -14, -4, -14, 12, -27, -19, 4, 1, -36, -13, -31, -33, -28, -24, 0, -2, -31, 10, 17, 6, 26, -15, 6, -15, 13, 15, -1, 16, -22, -15, -3, -12, -11, 13, -28, -38, 17, 14, -4, 2, -18, 19, -15, 13, 3, -7, -25, 20, -15, -30, -26, -36, -10, 13, -16, -12, 12, -33, 21, 5, 6, 23, -23, -30, 8, 24, -34, -18, 15, -11, 5, 12, 13, -11, 17, -8, -37, -11, 24, 0, -17, 6, -21, -8, 31, -41, 63, -34, 6, -28, 32, 25, 10, -23, 6, 15, -31, 4, -2, -26, -22, -5, 21, -9, 19, -13, -14, 27, -6, 1, -24, 9, -18, -1, 26, 23, 10, 9, -11, 10, 16, 25, 17, 8, -1, -24, 7, 15, -15, 28, -21, -11, -7, -12, -2, 5, -31, 19, 27, 14, -11, -21, 22, 21, -7, -31, 16, -12, 12, 10, -1, 26, -15, 27, -13, 20, 14, 18, -11, -16, 26, 9, -12, 25, 14, -13, 2, 0, 7, 18, -23, 11, -22, -5, 20, -20, -6, 14, 4, -19, -62, -30, -49, -14, 3, -10, -18, -5, -10, 13, 23, -1, 3, 19, 20, -1, -30, -9, -12, -36, 3, 5, -5, -4, 13, -19, 10, 5, 6, 0, -5, -6, -29, -24, 2, 19, -16, 8, -4, 8, 5, 31, 10, 15, 20, 23, 13, -3, -11, -17, 26, 0, 5, 38, 0, -23, 23, -20, -4, -31, 13, 7, -12, -20, -22, -15, -31, 18, -10, 0, -37, -2, 4, -26, -10, -26, -24, -20, 0, -21, -17, 19, 19, 19, 18, 25, -32, -29, -23, 0, -21, 17, -24, -3, -29, -50, -116, -18, 2, 29, 25, -7, -28, -16, 30, -13, -10, -24, -24, 29, 10, -3, 3, -7, 13, -18, 13, 24, 31, -1, 18, 30, 28, -11, 1, 5, 24, 27, 14, 24, 32, 2, -19, -7, -15, -6, 15, 8, -15, 15, 19, 4, -12, -12, -20, -17, 8, -14, 21, -5, -25, -19, -25, 9, 29, 20, 15, 13, -7, 31, -9, -8, -4, 6, 12, -6, 5, 15, 1, 11, 11, 16, 14, -9, 1, -15, 9, -3, -15, -22, 25, 29, -26, -10, -18, -11, -16, 33, 17, 15, -73, -114, 127, -30, -40, 6, -8, 29, 3, 11, 25, 7, -13, -2, -1, 12, 16, 28, 0, 12, -28, 24, 19, -6, -11, -9, 27, -17, -23, -6, 1, 14, 26, -23, -30, -12, -30, -2, 14, 2, 0, 26, -19, 15, -23, 32, 3, 30, -20, 8, 9, -16, 1, 16, -11, 1, -16, -29, 1, -19, -8, 28, 21, 13, 21, -31, -1, 10, -4, 4, 13, -2, 9, 1, 13, 7, -12, 21, 3, -20, -25, 1, -8, 32, 30, -2, -18, -10, -24, -1, -24, 6, 16, 20, 16, -102, -86, 78, 15, -12, 9, 12, -16, -12, 12, -17, 7, -20, 25, 19, 13, -8, -11, 4, 5, 32, 18, -27, -25, -14, -5, 1, -13, 7, -16, -30, -2, -10, -10, -7, -29, -16, -21, 8, 1, -31, -34, -15, 16, -12, 10, -9, 6, 1, 5, -14, 5, -15, -20, 0, 9, -23, -24, -23, 14, 24, -23, -14, -2, 6, -18, -21, 28, 30, 31, 29, 5, 4, -20, 3, 33, 5, -14, 10, 16, 36, 5, 13, 36, 21, 13, -1, 2, -11, 18, -13, 22, 35, 16, 13, 
  -18, -30, 30, -14, 14, -10, 15, 19, 3, -11, -25, -5, -25, -8, 3, -5, -16, -14, -13, -18, 6, 12, -17, 11, 17, 1, -22, -4, -13, 2, 5, -1, 21, 20, 24, -29, 7, 3, -22, -10, 0, -24, 21, -27, -11, 0, 19, -29, 21, 3, -23, 2, 18, 15, -5, -14, -11, 3, 22, 23, -29, 19, -7, -8, -28, 2, 17, 26, -22, -27, 21, -5, 24, 1, -9, 8, 24, -3, -8, -2, 14, -28, -13, 14, -12, 18, -7, 16, -23, -17, 9, 30, 20, -23, 17, -2, -29, -7, 0, -16, -16, -15, -30, -9, -20, -22, -15, -22, 24, 24, -30, 14, 7, 7, -10, -14, 14, 4, -12, -26, -9, -9, -9, 10, -1, -25, -30, -28, -17, 21, -22, -10, -5, 3, 13, 13, -16, 10, 20, -12, 16, 3, -8, 11, 6, 2, -8, 1, 20, 6, 29, -28, -29, 9, 1, -14, -24, 7, -26, 15, 26, -16, -11, 29, 28, -24, -27, 14, 11, 13, -20, 30, -12, 8, 3, -30, -26, 14, -5, 8, 28, 2, 5, 6, 3, -16, 16, -20, -21, 4, -22, -25, -9, 4, 18, -15, 5, 6, 17, -27, 12, 11, 12, 8, 27, -24, -24, 26, -24, 9, 22, 22, -19, -15, 5, -24, 14, -14, 12, 11, -8, 11, 24, 21, -9, -24, 16, 0, -23, -29, -14, -8, 24, 3, 29, -2, 26, -23, -20, 24, 30, -1, -6, 1, -3, -12, -8, -23, 27, -21, -15, -27, -8, -14, 18, -2, 14, -12, 23, 18, -30, -20, 28, -11, -22, 9, -24, -26, 2, 11, 21, -18, 0, 26, -4, -21, -5, 28, 29, -9, -20, 28, 11, -12, 15, 16, 19, 18, -16, -3, -23, -12, -20, -2, -24, -12, 19, -28, -25, 6, 0, -30, -19, -15, -30, 0, 23, 21, 0, -4, -18, 26, -27, 15, 20, 14, -15, 13, 10, 18, 27, 25, -29, -7, 4, -18, -11, 0, 30, -2, 8, 27, -27, -14, 14, -24, 11, 4, 26, 30, 24, -12, 1, 30, -4, 10, -14, 28, -25, 8, 24, 16, 22, -2, -12, -1, 11, 11, -26, 28, -25, 26, 30, 29, 21, 18, 18, -10, -30, 4, -27, -6, 13, -24, 2, 23, 23, -1, 6, 24, -4, -12, -29, 5, -25, -23, 12, -19, 30, -15, -26, 0, 23, 12, 12, 19, -21, 22, -29, -16, 5, -9, -1, -16, -23, 22, 14, 15, -20, 25, 30, 15, 25, -18, -28, 17, 23, 28, -9, 10, -13, 7, -20, 9, 2, -28, 5, -1, -2, 27, -1, 30, -20, -24, 19, 30, -11, -21, 11, -8, 6, 18, -9, 17, -27, -11, 2, 15, -27, 7, 23, -27, 14, -21, -4, -10, -12, -9, 14, 20, 1, 29, 8, -3, 24, 21, 21, 17, 9, -9, -10, 7, -2, 22, -7, 4, -13, 27, -5, -27, 12, 27, 13, 13, -24, -1, 18, -20, 12, 17, 10, -16, -19, 5, 3, -17, -27, -1, 15, 15, -1, -3, 14, -9, -12, 3, 14, -23, -23, -16, 1, 9, 1, -19, -12, 9, -20, 25, -13, 29, 0, 29, 30, 6, 13, 11, -16, 6, -6, -26, 1, 24, -25, -26, 10, 19, -3, 2, 10, 12, -16, -8, 0, 30, -27, -29, -12, 19, -9, -5, 17, -1, -30, 20, -1, 20, -15, 5, 4, 29, 27, -19, 19, -17, -11, 11, -7, 15, 17, -8, 25, 28, -25, 25, 14, 11, 1, -4, -18, -28, -16, 25, 1, 13, 11, 17, 6, 28, 10, 10, 7, -15, 0, 23, -7, 13, -14, 1, 14, -30, 12, 27, 7, -29, -23, 19, -1, 0, 23, 27, -30, 5, 30, 1, -25, -2, -17, -20, -11, -10, 10, 24, 20, -10, -26, 4, -4, -27, 22, -11, 17, 19, 9, -18, 25, 19, -1, 9, 28, -29, 25, -11, -8, -11, 30, -13, 1, 28, 21, 4, 8, -1, 14, 29, -13, -11, 18, 21, -17, -25, -13, 7, 15, 4, 13, 23, -10, 0, -24, -2, 7, 21, 12, -20, -18, 28, -18, -26, 24, -28, -6, 27, -25, -9, -14, 25, 17, 0, 11, -3, -26, 30, 28, 26, -3, -7, 2, -12, 24, 13, 19, 5, 26, 24, -25, -20, -26, 16, -14, 3, 27, 21, 14, -30, 20, 6, -6, -3, -4, 21, 12, 22, -11, 5, 9, -17, -8, 3, 22, 11, 24, 7, 27, 14, -27, -25, -20, -20, -28, -12, -18, 29, 11, -19, 14, 7, -20, -20, 15, 14, -8, 5, -22, -11, 19, 29, -8, -20, -24, -4, 3, -24, -27, -6, -26, 27, -18, -28, 7, 11, -15, 24, 8, 12, 17, -11, 18, -7, -15, -20, 26, -18, -19, 1, 28, 18, 6, -5, 18, -15, -12, -6, -15, 14, 8, -1, 12, -4, -6, -28, 14, 22, 17, -8, -26, -11, 14, -21, -16, 15, 8, 1, 5, 1, -17, -19, 8, 12, -1, 1, 29, 27, 15, 3, 14, 3, -7, -23, 6, -27, 19, 27, -6, -27, 16, 29, -24, 17, 17, 12, -20, 5, 21, 1, -24, 23, 13, -18, 16, -2, -29, 16, -10, -3, 14, 
  -57, -81, -76, 13, 12, 25, -19, -16, -5, 23, -18, 13, -12, -9, 30, -23, -2, 21, 19, 21, 7, -13, 8, -24, -13, -8, 18, 11, 4, 4, -26, -23, -24, 20, 22, -7, -5, 21, 1, 25, 27, -16, 24, -4, -13, 16, -31, 25, -14, 18, -3, 20, 11, 14, 10, 21, 1, -7, 1, -19, 23, -10, -17, -6, 3, 19, -11, -20, -22, -4, 30, 0, 13, -9, -6, 30, -4, -3, -11, 41, 18, 42, 33, -2, 5, -15, -1, 27, 27, 38, -16, 7, 9, -4, 21, -71, -81, -54, -4, 6, -16, -30, 4, -18, 0, 22, -18, -3, 4, -9, 22, 11, -36, 16, 21, -20, -22, 24, 17, -26, 4, 23, 15, 20, -6, -9, -2, -10, -27, -22, -19, -8, -20, -7, -9, -15, -5, -12, 14, -21, -27, -13, -37, 0, -17, 1, -12, -1, 23, -30, -31, -10, 27, -19, -21, -32, 21, -11, 13, -15, -30, 9, -28, 17, 5, -30, 17, -31, -30, -13, 22, 16, -3, -33, -9, 9, 15, -9, 10, 8, 9, -13, 6, 22, 3, -30, 14, 0, -29, 23, -55, -13, -20, 13, 30, 21, -15, 17, 9, 23, -20, -7, 13, 9, 3, 10, -25, 3, -31, -3, -8, -31, -8, 2, 6, -22, 16, 26, -4, 22, 7, -22, -29, 6, -29, -17, -7, 16, 0, -8, 2, -9, 8, -33, -3, 1, 19, -15, 19, 4, -2, -6, -8, -16, 9, -33, -20, 6, 22, 22, -19, -30, -20, -30, 17, -12, -26, 23, -30, 27, 1, 6, 23, -18, 10, 20, -18, -28, 20, 21, -5, 17, -10, 12, 30, -14, 18, -20, 30, 10, -3, 30, 15, -23, 6, -51, 21, 13, -8, -61, -19, -8, -6, -10, -19, -35, 24, -6, 8, -3, 12, -5, 9, -17, 14, -18, -22, -14, 15, -13, 19, 19, -22, 16, 25, 1, 6, 6, 27, -8, -13, 21, -17, 3, 12, 15, -26, -7, -24, 20, -18, -2, -2, 18, -32, -5, -13, 1, -23, 1, 8, -7, -16, -5, -3, 4, -18, -18, -25, 18, -13, 17, -18, 22, -27, -14, -4, 21, 13, -28, 5, -25, -6, -27, 7, -30, -22, 23, 1, -30, -2, -4, -26, 3, -31, -12, 16, -19, 18, 12, -78, 69, -41, 4, 21, -24, 29, -4, 28, 3, 8, -27, 15, 9, -12, 5, 7, -21, -12, -13, -18, 20, -5, -5, 6, 22, 29, 3, 5, -1, -7, -25, -11, -17, -24, 33, -3, -17, 1, -9, 26, 26, 0, 8, 13, -8, -20, 15, -15, 30, -23, 25, -29, -20, -21, -17, -27, 7, 10, 8, -7, 9, 16, -14, -3, -22, 1, -28, -19, -19, 2, 7, -6, 13, -14, 9, -23, 3, 6, 9, -20, -10, 21, 7, -22, 16, -20, 19, -15, 16, 7, 2, -5, -8, -4, -39, -63, -54, 2, -41, -28, 0, 8, -10, 21, 4, 7, -34, 18, 16, -8, 19, -35, 16, -31, -18, -20, -30, 20, -32, -35, -4, -18, -11, 12, -3, 0, 23, -25, -3, 14, 20, -10, -3, -25, 9, 25, 23, 29, -15, 21, 37, 24, 39, -15, 7, 30, -21, 11, 24, 19, 8, -1, -28, 14, 16, 16, -13, 21, 11, -37, 18, -30, -15, -38, -12, 7, -8, -26, 18, -12, 19, -10, -22, -13, 13, 31, -11, 29, -7, -15, 17, -4, 21, -13, -9, -15, 1, -29, -29, -51, -100, -66, 27, 25, 9, -21, 5, -14, 3, 18, 26, -3, -17, -1, 14, 2, 7, -14, -15, -11, -8, 13, 6, 8, 0, 7, -17, -16, 16, 19, 26, -8, -19, 27, -16, -1, 2, 27, -14, -6, -8, 28, -18, -8, -8, 27, 27, 32, -20, -4, 13, 8, 14, -20, -14, -7, 32, 16, 31, 1, -17, 27, 27, -20, 32, 15, -7, 3, -19, -16, -7, -12, 16, 25, -12, 13, 26, -20, 6, 0, 5, 12, -20, 10, -8, 29, -26, -9, -22, 19, 27, -3, 6, 7, -53, -91, 115, -17, -17, 35, 21, 0, 30, -23, 6, 31, 11, 28, 33, 33, -22, 24, -10, -21, -24, 19, -9, 18, -27, -29, 19, 9, -14, -26, -2, -4, 0, 25, -20, -11, -29, -19, -26, 25, 25, -23, -2, -3, -19, 10, 9, -12, -5, -6, 9, -22, -4, -25, 23, -29, -1, 10, 19, -25, 11, -24, -18, -27, -11, -5, -16, 30, -20, -12, 28, 27, 5, -25, -17, 25, -11, -18, -5, 6, -25, 28, 5, -10, -22, 4, 11, -17, -23, 23, -1, 10, -2, 21, -16, -49, -126, 58, 4, -2, 19, 27, 30, -18, 5, 20, 11, 12, 34, -12, 34, -20, 1, -21, -2, -12, 3, -6, -16, 5, 24, 4, -8, -17, 17, 17, -25, 19, -8, -33, -8, -23, -18, -10, 7, -28, -1, 10, 22, 4, -2, -16, -23, -17, -22, -8, -9, 17, 33, 14, -5, -8, 25, -12, -13, 33, -19, -6, 28, -1, 33, 23, 29, 37, 31, -17, -18, 6, 8, -20, 8, 16, 15, 9, 18, 9, 2, 0, 23, 28, 21, 13, 16, -20, 25, 33, -8, -12, 22, 1, 
  -24, 25, 19, 4, -2, 1, -2, -13, -3, 10, 2, -23, -16, -26, -18, 15, 22, 16, -24, -3, -13, -26, -13, 24, 20, 13, -5, 5, 31, 29, 3, -4, -2, 20, 8, 9, -2, -9, -23, 13, 9, 30, -16, -21, 14, 10, 16, 22, 30, 9, 28, 25, -4, 10, -6, 5, -24, -3, 3, -12, -12, -9, -6, 29, -6, -9, -3, 11, 3, 30, -10, -22, 21, -4, 8, -27, 25, 9, 17, 30, 16, 31, 13, -27, 12, 16, 2, -19, 13, -7, -27, 26, 27, 18, -16, -16, 24, 21, 29, 19, 31, 19, -26, -2, 12, 7, -26, 13, 13, 0, 22, -14, -15, -25, 11, -17, -26, 10, 7, 26, 10, -28, -7, 29, 15, 1, -11, 13, -17, -19, 28, 19, -11, 20, 31, -27, -24, -3, -8, 29, 9, 17, -21, -16, 29, -7, -8, 17, 4, 5, 14, 2, -15, -17, -29, -18, -5, -3, 0, 3, 20, 31, 25, -24, -4, -22, -4, 15, 9, -28, 10, 25, 6, -29, 16, -2, 0, 29, -6, -29, -16, -20, 15, 21, -6, 25, -16, -3, 11, 19, -21, 0, -15, 3, 13, 9, -5, -5, -21, 28, 25, 16, 10, -13, -5, 2, -4, 17, 24, 16, -9, -24, -26, -24, -22, 17, -24, 5, -20, 21, 29, 3, 5, -1, -23, 10, -5, 31, -15, -28, -12, -6, 25, -22, 6, 20, -12, 18, 19, -24, 13, -11, 28, -10, 22, 30, -13, -5, 17, 1, -24, 9, -7, -3, -6, -16, -27, 1, 4, -21, -11, 19, -4, 28, 13, -24, 13, -27, -17, 29, -17, 23, 2, -4, 3, -3, -14, 21, -3, 6, 28, -9, -7, -27, -10, 1, -6, -8, -6, 4, -21, 5, 17, -12, -29, -7, -11, 17, 16, -13, -17, 27, 17, -26, -22, -13, 20, -15, -7, 21, -25, -2, 3, 9, -18, -13, 13, -20, -25, 25, 13, 10, -1, -19, -10, 9, -1, 5, -12, -4, 17, 9, -6, 8, 29, -18, -13, -8, 24, 0, -22, 0, 12, -10, -7, 24, 2, 22, 19, 25, -11, -5, -22, 12, 22, 5, 8, 10, -12, -10, 0, -20, 26, 0, 15, -10, -15, -12, -13, 7, -17, -24, -20, 23, -23, -20, -3, 4, -25, 22, 5, 14, 30, -27, -6, -23, 11, -5, 10, -10, -13, -29, -23, -3, 17, -22, 12, -3, 28, 7, 13, 20, 3, 9, -4, -10, 25, -24, 1, 24, -10, 32, 25, -11, -4, 12, 8, -1, 18, 17, 21, 6, 4, 10, -21, 21, -14, 15, -27, -7, -2, 9, 21, 20, -5, 15, 21, -4, -23, 23, 0, -21, 0, 1, -22, 29, -21, 10, 26, -8, 1, -15, -13, -27, 0, 8, -1, 18, -13, -24, -28, 7, 1, 18, 5, 17, 16, 9, -14, 27, -5, 19, -10, -7, 9, -12, -4, 0, -12, -30, 28, -21, -10, 6, 6, -15, -15, -18, -28, -17, -17, 2, 0, -23, -12, -7, -9, -7, 31, -28, -15, 3, -9, -21, 23, 17, -15, 13, 8, 25, -7, 21, 5, 27, 29, 3, 27, 21, -29, 25, -21, -12, 3, 3, 13, -12, -1, 23, -16, 29, -6, -10, 10, 28, -22, -5, -9, 22, -19, -20, -29, -24, 11, 6, -17, -21, -3, 14, 4, 1, 21, 8, -6, 12, 1, 2, -13, 6, 19, -23, -2, -19, 21, -18, 28, -18, -4, -14, -21, 10, -16, -21, -20, 6, -19, 10, 0, -12, 8, -2, -6, -3, 27, 5, 3, -29, -26, -4, 20, 12, 28, -6, 24, 11, 20, -5, 25, 1, -12, 17, 3, -25, 16, 5, -23, 12, 25, 11, 16, -21, 6, 13, -17, 2, 18, -29, 14, 23, 8, 9, 18, -13, 19, -1, 31, -18, -21, 3, 1, 0, 28, 15, -7, 18, 6, 28, 23, -23, -6, 25, -13, 15, 9, -5, -14, -20, 21, -29, -14, -20, -25, 17, 11, 16, -12, -22, -18, 10, 14, -26, 10, 28, 27, 22, 13, 19, 7, -29, -30, -31, 7, 14, -6, 4, -27, 16, 28, -24, -15, -22, 10, 7, 20, -18, 27, -11, -26, 24, -18, -9, 14, 13, 8, 19, 28, 8, 12, -14, -8, -28, 4, -28, 13, -13, 7, -19, -28, 14, 3, 13, -3, -13, 19, 8, -25, 22, 9, -11, -26, -8, 18, 27, 7, -8, 19, -22, -7, 4, 1, 29, -18, 16, 30, 29, -8, 1, -3, -27, 14, -3, -4, 5, -11, -26, 7, 19, 11, 5, -7, -12, 5, -21, 18, 29, -20, -24, 7, -28, 30, 10, 24, -10, 16, -18, 3, -8, -22, 7, 15, -8, -10, 8, 4, 30, 2, 19, -20, -6, -15, -21, 2, -6, 29, -25, -4, 13, 30, -25, 14, -1, 3, 22, -13, -25, -12, -26, -25, 19, 14, -20, 18, 17, -2, -15, 31, -2, 5, 1, -25, -7, 3, 13, -3, 31, 26, 27, 25, -6, 25, -29, 18, 12, 0, 12, 22, -10, -11, -8, 14, -21, -21, 9, -4, 17, -14, 31, -21, 6, -21, -5, -22, 31, 16, 11, -21, -10, 28, -6, 15, -20, 24, 13, -13, 24, 17, 
  -13, 2, -29, -26, 27, -13, 5, 21, -17, 2, 3, 13, 6, -9, -5, -9, 1, -5, -16, 24, -27, -8, 17, -24, 27, -4, -21, 29, 18, 16, 18, 5, 5, 7, -27, -28, 27, 5, -25, 5, -23, 19, -23, 23, 29, 27, 19, 26, 3, -22, -12, 20, -14, 27, 28, -20, -3, -9, 12, -25, 23, -8, 20, 23, 26, -9, -11, -13, -3, 6, 22, 20, -29, -27, 14, 23, -25, -10, 19, -28, 20, -30, -13, -30, 21, -2, 27, -26, -14, -21, 3, -23, -24, 24, 29, -16, 19, -22, 17, 17, 9, 30, 26, -16, 3, -7, -7, 14, -8, -14, 22, 25, 24, 5, 15, 15, 5, -15, 30, 12, -4, 14, 13, 30, -12, -18, -20, -11, -1, -17, -14, 11, 30, 29, 26, 19, -16, 15, 29, -7, 28, -28, 24, 4, 10, 17, 13, -3, -4, 13, 8, 21, 10, -13, -16, -26, 0, -1, -12, -4, 10, 3, 11, -27, 19, -14, -22, -20, -12, -11, 5, 25, -28, 21, 23, -15, 6, -23, -25, -23, -6, 1, 17, -13, -17, -3, 9, -14, 22, -18, -22, 2, -16, 24, -6, -21, -16, 1, -25, 17, 0, -5, 25, 26, -27, -21, 2, 30, -11, 1, -6, 15, 19, -1, 0, -28, -27, 5, -30, 23, 13, -11, -9, -6, 9, 21, -17, -4, 24, -15, -6, 10, 15, 11, -23, 0, 12, -17, 13, -7, 1, -19, 28, 12, 0, 3, -18, 6, -22, -25, 12, -20, -1, -11, 15, 5, 17, -29, -25, 30, -18, -15, -17, 20, 28, -30, 30, -18, -10, 18, 9, -22, -28, 17, -9, -29, -11, 26, 22, 23, 1, -6, 18, 2, -2, 0, -19, -13, -27, 6, 22, 23, -6, 29, -10, -27, -27, 11, -27, 18, 19, 13, -15, 4, 22, 22, -3, 23, -23, 25, -11, -19, -27, 29, -16, -14, -6, 24, 24, 7, 26, -2, -28, 20, -11, -12, 2, -7, 21, -15, -1, -16, -6, 15, 7, 9, -12, -6, -18, -25, -6, -28, 29, -20, 26, -3, 13, -4, -9, 15, 19, 10, 28, -11, -29, 13, 9, 1, 29, 24, -25, -16, -19, 25, -17, 28, 15, -3, -8, 25, 0, -18, -22, 24, -29, -13, -29, -6, 12, 4, -7, -4, 22, 27, 8, -14, 26, -26, 24, -4, 17, -11, 14, -21, 4, 29, -7, -25, 29, 20, -13, 2, 3, 30, -20, -28, -24, -29, -29, 12, 23, 1, 13, -22, 4, -29, 20, 23, 16, 4, -6, 30, -25, -1, -3, -18, 3, 19, -5, 7, 4, -7, 22, -8, 3, 7, 25, -3, 12, 20, 27, -2, 5, 9, 21, -8, 15, -20, -13, -1, 28, 30, 30, -23, 30, 26, 12, -29, 20, 25, 21, -28, 2, -6, -3, 26, 21, 20, -8, -20, -6, 8, 11, 28, 7, -28, -14, 29, -23, 8, -16, -12, -23, 18, 16, 9, -7, 30, 6, 13, -14, 17, -11, -18, -13, -8, -23, -1, 18, 29, 5, -21, 7, 28, 29, 20, 13, 5, -7, 25, 7, -20, 7, 12, 4, 15, 24, 0, -3, -21, 20, -23, 6, -29, -9, 15, -13, -20, -11, -29, 23, 4, 21, -4, 3, -2, -20, -30, -24, 12, -16, -19, 4, -3, 2, -12, 10, 29, -17, 27, 25, 20, 19, -15, 25, 4, -30, 13, 12, 14, 18, 29, -22, -26, -28, -12, 24, 15, 0, -4, -5, -4, 15, 25, 26, 18, 28, -29, 22, 4, -5, 12, 15, 19, 11, -22, 6, 24, 16, 3, 18, 0, -5, -14, 2, -9, -29, 24, 14, -19, -5, 0, -26, 21, -20, -17, -7, -20, 14, -4, -7, 2, -28, -30, -4, 12, 16, -13, 4, -3, -11, 11, -19, 0, 16, -4, 11, -24, -1, -19, -25, -27, -8, -18, 19, 8, -5, 6, 13, 20, 29, -11, 18, 7, -1, 30, -3, 26, -28, 10, 8, -6, -11, -9, 0, -21, 0, 28, 29, -14, -17, 8, 26, 12, -29, 5, -8, -26, -5, 20, 11, -6, 9, 2, 1, -27, 19, 7, 12, -27, 21, -21, 28, -30, -1, -2, 0, -9, 27, -11, 16, 4, -16, -5, 5, 19, -3, -15, 2, -13, -29, 15, 26, 19, -2, 19, -15, 22, -29, 4, -24, 20, -11, 10, -17, 16, 3, 28, 9, 18, 2, -6, -8, 20, 19, -27, -10, -3, 6, -28, -29, -12, 9, 24, -30, -3, 17, -18, 23, 11, 26, 21, -22, -23, 24, -18, -3, -17, 24, -8, -27, 21, -29, 11, -26, 7, 3, -14, 12, 23, -12, -29, 10, 12, 5, -5, -17, 20, -27, 16, -27, -2, 1, -24, 13, -7, 1, -12, 2, -19, -3, 15, -3, -11, -15, -16, -2, 6, -19, -16, 22, 19, -24, -9, -29, 25, 28, -13, -9, 29, 26, -10, -21, 16, -28, -5, 25, -7, -8, -25, -10, 20, -18, -7, -4, 24, 10, 23, -23, -16, -27, 7, 9, -29, 2, -1, 4, 11, 24, 5, -17, -28, 9, 2, -23, 22, 10, -5, 15, 23, -6, -22, -28, -29, -30, -17, 3, 18, 25, 22, -16, -12, 25, -22, -3, 
  -20, -6, 24, 26, 18, 11, -1, -20, -8, -8, -26, -20, 22, -3, -13, 21, -12, -5, -25, -5, 19, -26, -9, 30, -19, -25, 23, -8, 6, -2, 17, 11, 25, 3, 13, 19, 13, -4, 7, 18, -10, -30, 9, -12, 29, 23, -23, 14, 16, 2, 3, -25, -22, -13, 11, -22, 4, 12, -28, 9, 3, -8, 30, -24, 22, 11, -23, 27, -22, 17, 10, -16, -2, -25, 27, -18, -17, -17, 16, -16, -23, 16, -13, -27, -29, -16, 1, 7, -14, 6, -16, 28, 6, -15, 6, 26, 4, 29, -5, 7, -19, -16, -9, 27, -17, 14, -16, -11, 10, 15, -7, 29, 26, 27, 8, 15, 25, 24, 14, 24, 9, -8, -21, -18, 30, -10, -28, -12, -23, -22, 27, -26, -12, -8, -22, 3, -16, -3, -20, 29, 16, -12, 23, 24, 30, -21, 8, 16, -28, 4, 9, -22, 4, -2, -21, 24, -25, 17, -22, 13, 26, 25, -27, 12, -13, -17, 7, 11, 0, 19, 18, -7, 21, 19, -17, -19, 25, -2, 18, 11, -17, -21, 13, -8, -25, -9, 24, 19, -14, -12, -6, -14, -25, -3, 11, -12, -18, 20, 17, 18, -6, -14, -29, 4, 16, -5, 5, 19, -16, 26, -17, 27, -17, 8, 8, -14, -16, -26, -16, -13, -21, 14, -1, -10, 11, -26, 2, -1, -12, -29, -7, 11, 20, -11, 28, 21, 27, 0, 28, -28, 30, 10, 23, -23, -2, 9, 8, -12, 25, 24, -11, 29, -25, 21, -17, -6, -12, 23, -17, -10, -26, 10, 12, 2, 8, 17, 1, 11, -13, 3, 16, -12, -1, -29, -15, -17, 9, 17, 24, 20, 16, -19, 8, 5, 28, -13, 22, -12, 21, -12, 17, -22, 9, -11, -6, -6, 14, 23, 22, 4, 5, -2, -20, -10, -10, -7, -30, 2, 10, 2, -13, -6, -13, -5, 3, -5, 22, -28, -25, -6, -23, -25, 17, 18, 16, -2, -21, 10, 5, -26, 14, -10, 11, 27, 18, -22, 12, -13, 15, -28, 30, 12, 14, -4, 21, 1, -3, 13, -3, 1, 11, -30, 20, 1, 17, 23, 20, -30, 26, -24, 16, -24, 10, 18, -4, -7, -10, -30, 28, -27, -13, 28, 5, 15, 11, 0, -11, 2, 1, -3, 8, -30, -10, 16, 19, 4, -13, 17, 11, 1, 15, -22, -29, -9, -28, -10, -11, -13, 13, -7, 15, 0, -11, 24, -19, -27, -20, -29, 29, -5, 29, 26, 25, -11, 5, 23, 6, 13, 4, 23, -14, 23, 10, 12, -2, 24, -10, -7, -14, 22, 3, 9, 27, -23, -1, 17, -17, -28, 11, -1, 7, 20, -27, -25, 13, 29, -19, -19, -4, 14, -20, 29, 3, 12, 26, 23, -15, 22, 6, 13, 0, 11, 15, -9, -28, -5, 2, 25, -1, -8, 21, -5, -13, 9, -21, 9, 1, 29, -26, 24, -17, -29, -25, -27, 25, -17, 11, -15, 7, -25, -25, 17, 30, 22, 9, 27, 8, 27, 3, -8, -8, -27, 10, 19, 21, -3, -6, 13, -6, 1, 8, -29, 27, 19, -25, 7, -13, -23, 24, -14, -1, 9, -5, 8, -28, -7, -8, 9, 21, 27, -27, -26, -23, 12, -3, 0, 24, -18, 13, -24, 27, 1, -8, 16, -5, 22, 9, 16, 8, 21, 19, 19, 21, -27, 29, 29, -26, 27, -16, 3, 4, 25, 24, 8, -22, 16, 20, -27, -5, -19, -27, -7, -12, -23, 14, 23, 19, -23, 8, 10, 13, 0, -3, -5, 4, 4, -14, 23, 17, 2, -28, -14, -6, -14, 21, 26, -7, -2, -18, -23, 20, -10, -3, 14, 23, -30, 4, -6, -23, -23, 19, -21, 0, 14, 27, 7, 22, -23, -23, 8, 13, 10, -2, -16, -21, -4, -27, -14, 8, 22, 22, -25, 22, 2, -8, -24, -13, 16, 18, -26, 19, -15, 12, -27, 20, -22, 28, -8, 30, 16, -3, -1, -2, 18, 27, 22, 1, 21, -2, -7, -3, 2, -13, -25, 3, 21, -15, 20, 8, -14, 7, 30, 2, -15, -12, 17, 17, 17, 3, 11, -29, 3, -18, -13, 21, -11, 15, 9, -1, -1, -5, 22, 1, 8, 3, 2, -19, 25, 14, -21, 9, -17, 30, 23, -7, 3, -6, -30, 30, -26, 23, 29, 24, 25, 1, 26, 27, -11, 5, -4, -26, -12, -7, -18, -29, -8, 5, 6, 21, 27, 16, -3, -21, -14, 6, 25, -29, 16, -10, 18, -19, -17, -30, -20, -18, 26, -25, -1, -5, 11, 28, 1, -29, 29, -30, -5, 29, 4, 13, -28, 21, -28, -26, -30, 3, 20, -13, 16, 5, 21, 15, 8, 11, -7, 1, -9, -21, 20, -29, 28, 17, 8, 17, -5, -1, 0, -12, 21, 6, 3, -27, 16, 10, 19, 0, 4, -24, 26, 11, 12, -21, 26, 2, -8, 10, 11, 21, -29, -20, -3, 9, 17, 11, -12, 24, 29, 23, 12, -3, -11, 19, 4, 18, 29, 26, 8, 6, 15, 3, 15, -12, -30, -10, -24, 26, -7, -25, 6, 2, 19, 25, 2, 5, 23, -30, -24, 16, 12, 20, 14, 23, -18, 3, -17, 23, 
  -9, 14, 21, 14, 6, -1, 0, -26, 27, 27, -7, 23, -2, -9, 25, 10, 7, -28, 9, -4, -9, 17, 26, -26, 20, 28, -1, 28, -27, -30, -28, -21, 30, 16, 10, 4, 24, -14, 16, -7, -23, -12, 28, 12, -17, 5, -4, 22, -13, -30, 26, 21, -9, -9, -11, 1, 25, -27, 5, -11, 8, -22, 9, -22, -17, 24, 29, 21, 4, -18, 23, -17, 3, -12, -26, 20, 16, 8, -8, 24, 0, 26, -6, 6, -26, 30, -2, 25, -27, 17, -9, 0, 15, -26, 17, 25, 9, 30, 30, 27, -6, 8, 21, 16, 21, -17, 3, 2, 2, 18, -19, -27, 30, 29, 8, -30, -12, 28, 20, 14, -5, -1, 19, 19, 17, 28, -19, -6, 29, 25, -30, 26, -7, 18, 18, -11, -11, -3, -15, -3, -22, 4, 21, -23, 11, -19, -7, 30, -27, 21, 23, -20, -29, -16, -27, -29, -24, 20, 28, 30, -29, 2, 30, 4, -25, -25, -15, -23, 18, 6, -12, -2, 17, -22, 5, -17, -6, -18, -24, -30, 3, 24, -1, -30, -9, 2, -24, -4, -13, -13, -22, 8, -7, -20, -17, -10, 19, 2, -29, -4, 5, 0, -13, 21, 14, -25, -12, -2, -18, 5, -21, -27, 26, 16, 15, -23, -16, 11, 19, 21, -22, 8, -28, -6, 26, 7, -10, -21, -23, 28, -14, 15, -4, -1, 16, 21, 29, -10, -28, -7, 21, 23, 2, 23, 19, -30, 8, -8, -19, -9, 25, -17, -7, 15, 16, 28, 7, -3, -23, 21, 28, -6, 25, 1, -5, -13, -7, 4, 18, 4, 5, 6, -12, 28, 28, -1, -8, -26, 29, 5, -9, -15, -2, -1, -9, 8, -5, 27, 21, -24, 27, 24, -28, 0, 5, 13, -6, -29, 16, 6, 2, -1, -22, 1, -28, 27, -21, -27, -10, 28, -3, -15, -17, 12, 27, 24, 2, -8, 21, -9, 7, 30, 2, -22, -7, 3, 13, -11, 19, -6, -13, -29, -6, -6, 13, -19, -11, 27, 15, -15, 13, 5, -19, -3, -12, -3, -21, -5, 3, 24, 17, -20, -1, 0, 1, 1, -30, -22, 1, 26, 5, -27, -28, 1, 28, 19, 18, 7, -13, 1, 2, -27, -1, -8, -1, -30, -21, 9, -18, 15, 19, 1, -11, -3, -9, -14, 13, 15, -7, -6, -29, 24, -25, 7, -12, -22, 20, -14, 4, -5, 27, 28, -18, -10, -14, 7, -27, 0, 16, 23, -30, -24, -5, 8, -25, -27, -10, 13, -9, 1, 14, -19, 9, 18, 13, 29, 0, -15, -21, -5, 18, -18, -27, -19, 26, -28, 17, -24, 18, 8, 6, 15, -7, 0, 7, 10, 17, -19, 15, -7, -28, 30, -17, -26, 28, -5, 12, -15, 24, -24, -2, 10, 15, 0, -18, -20, -9, -2, -16, -9, 8, -18, 3, -27, -29, 28, 5, -29, 18, 4, 23, -20, 17, -25, 16, 5, -10, -29, -6, 0, -28, -7, 27, 19, -11, -27, 27, 13, 3, 21, 28, -27, 20, 23, 28, 24, -18, 22, 17, -7, -2, -28, 1, 27, -21, 9, -4, -18, 16, 15, 4, 28, -1, 16, 9, 18, 22, 5, 3, 3, -8, -13, -5, 0, -2, 15, 6, 11, 4, -30, -29, 24, 8, 18, 12, -6, 7, -27, 14, 8, 8, 14, -30, 25, -6, 15, 23, 7, 24, 10, -28, -14, -10, 28, 17, 14, 24, 5, -3, -6, 23, -14, -14, -26, 14, 19, 17, -14, 26, 26, 2, -14, 16, -20, 27, -20, 22, -20, -12, 13, -22, 13, 27, 21, -25, 3, 16, -17, 2, -16, 19, -8, -29, -22, 16, -11, -12, 7, -20, 15, 9, 8, -11, -7, 27, 18, 22, 12, -5, -16, -23, 10, -25, -2, 26, 12, -29, -27, -20, -29, -29, 27, -1, 27, 21, -25, -22, -22, 11, -15, 21, 0, 15, -6, 25, 25, -15, -16, 5, -9, 4, -13, 15, -4, 28, -28, -17, -19, -22, -13, -1, 24, -6, -4, 22, -16, 0, 16, 29, -28, -25, 20, 21, 9, 22, 7, 21, 28, 9, -7, -9, 21, -24, 20, 18, -7, -9, 25, 13, -25, 13, 19, 12, 13, -14, 6, 3, 0, 24, 15, 12, 29, 8, 24, -17, 27, -30, -11, 18, 9, -15, -24, -8, -10, 4, 28, 8, -14, 4, -3, 30, -26, -28, 22, -22, 17, 16, 14, 20, -2, -2, -4, -12, 26, 18, -25, 26, -6, 22, 0, -21, 17, -25, 16, -1, -28, -29, 24, -18, 29, 8, -21, -26, -29, 3, -18, -6, -15, -2, 7, -4, -30, 26, -7, 27, 18, -15, 25, 5, 3, -7, 19, 30, 29, 25, -17, 20, -17, -6, -22, 21, -23, 2, -4, 22, -3, -9, 30, 10, 4, 20, -6, -28, 27, -15, -29, -17, 12, -29, 0, 26, -6, -5, -15, -3, 13, -7, -6, -22, -15, -20, 0, 23, -5, 3, -1, 23, 7, -20, 18, -13, 27, 3, 26, 28, 3, -21, 25, -3, 3, -12, 7, 25, 26, -8, -11, 23, -11, 17, -20, -4, 8, -23, 5, -25, -29, 2, 1, 19, -24, 9, -15, -29, -10, 5, 
};
const TfArray<2, int> tensor_dimension1 = { 2, { 20,855 } };
const TfArray<1, float> quant1_scale = { 1, { 0.0027236782480031252, } };
const TfArray<1, int> quant1_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant1 = { (TfLiteFloatArray*)&quant1_scale, (TfLiteIntArray*)&quant1_zero, 0 };
const ALIGN(16) int32_t tensor_data2[20] = { 0, -81, 87, 0, 0, 0, 0, -4, -68, 95, -12, -85, -13, -86, 0, -88, -13, 0, 0, 0, };
const TfArray<1, int> tensor_dimension2 = { 1, { 20 } };
const TfArray<1, float> quant2_scale = { 1, { 0.0002334584278287366, } };
const TfArray<1, int> quant2_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(16) int8_t tensor_data3[10*20] = { 
  -58, -3, 26, 16, 77, -56, -25, 16, -77, -84, -29, -51, 83, 75, -26, 1, -80, 13, -27, 11, 
  -60, 13, -46, 36, 23, 8, 64, -40, -33, -66, 15, -71, -22, -28, -71, -79, -38, 60, 44, -79, 
  -72, 57, 27, -46, 59, -2, 38, -41, 57, 80, -54, -60, 29, -127, 29, -76, -22, 90, -81, -27, 
  -60, -19, -56, -75, -13, 42, 58, 69, 80, -67, 70, 35, 2, -61, -22, 90, 20, 26, 24, -61, 
  14, 4, -55, -70, -91, 79, -32, -6, -64, 86, 5, -91, -78, 32, -14, 16, 18, -82, 89, 22, 
  55, 78, -76, 8, -63, -18, 3, -21, 96, -93, -94, 97, -70, 64, -46, 102, -78, -7, -79, 64, 
  73, -28, 4, 72, 57, -26, 11, 43, 44, 67, -44, 61, -92, 10, -6, 19, 36, -19, 33, -42, 
  -50, 80, -47, -87, -19, -15, -27, -74, 71, 69, 58, 75, -17, -24, -21, -63, -53, 15, -38, 41, 
  -63, 63, 2, 42, 85, -3, 52, -88, -10, -75, 38, 79, 82, 116, -15, 76, -72, 83, -1, 3, 
  -25, 27, 23, 71, -67, 54, 65, -51, 61, -24, -18, 18, -78, -49, -74, -7, 89, 86, -30, 86, 
};
const TfArray<2, int> tensor_dimension3 = { 2, { 10,20 } };
const TfArray<1, float> quant3_scale = { 1, { 0.0046856040135025978, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(16) int32_t tensor_data4[10] = { 0, 0, 67, -21, -22, -49, -82, 54, -59, 51, };
const TfArray<1, int> tensor_dimension4 = { 1, { 10 } };
const TfArray<1, float> quant4_scale = { 1, { 0.00042213164852000773, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(16) int8_t tensor_data5[2*10] = { 
  -38, -127, -3, -112, 9, -107, 56, 77, -15, 43, 
  74, -114, -20, 104, 102, 90, 60, -2, 45, 1, 
};
const TfArray<2, int> tensor_dimension5 = { 2, { 2,10 } };
const TfArray<1, float> quant5_scale = { 1, { 0.0055145043879747391, } };
const TfArray<1, int> quant5_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(8) int32_t tensor_data6[2] = { 52, -52, };
const TfArray<1, int> tensor_dimension6 = { 1, { 2 } };
const TfArray<1, float> quant6_scale = { 1, { 0.00045409623999148607, } };
const TfArray<1, int> quant6_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const TfArray<2, int> tensor_dimension7 = { 2, { 1,20 } };
const TfArray<1, float> quant7_scale = { 1, { 0.090091191232204437, } };
const TfArray<1, int> quant7_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const TfArray<2, int> tensor_dimension8 = { 2, { 1,10 } };
const TfArray<1, float> quant8_scale = { 1, { 0.082345791161060333, } };
const TfArray<1, int> quant8_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<2, int> tensor_dimension9 = { 2, { 1,2 } };
const TfArray<1, float> quant9_scale = { 1, { 0.082214817404747009, } };
const TfArray<1, int> quant9_zero = { 1, { -84 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<2, int> tensor_dimension10 = { 2, { 1,2 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfLiteFullyConnectedParams opdata0 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs0 = { 3, { 0,1,2 } };
const TfArray<1, int> outputs0 = { 1, { 7 } };
const TfLiteFullyConnectedParams opdata1 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs1 = { 3, { 7,3,4 } };
const TfArray<1, int> outputs1 = { 1, { 8 } };
const TfLiteFullyConnectedParams opdata2 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs2 = { 3, { 8,5,6 } };
const TfArray<1, int> outputs2 = { 1, { 9 } };
const TfLiteSoftmaxParams opdata3 = { 1 };
const TfArray<1, int> inputs3 = { 1, { 9 } };
const TfArray<1, int> outputs3 = { 1, { 10 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension0, 855, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 17100, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant1))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 80, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 40, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 8, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 864, (TfLiteIntArray*)&tensor_dimension7, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension8, 10, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 16, (TfLiteIntArray*)&tensor_dimension9, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension10, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_SOFTMAX, },
};

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization = tensorData[i].quantization;
  if (tensor->quantization.type == kTfLiteAffineQuantization) {
    TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
    tensor->params.scale = quant->scale->data[0];
    tensor->params.zero_point = quant->zero_point->data[0];
  }

}

static void init_tflite_eval_tensor(size_t i, TfLiteEvalTensor *tensor) {
  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  if (current_location - bytes < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBuffer(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensor(const struct TfLiteContext* context,
                               int tensor_idx) {

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensor(const struct TfLiteContext* context,
                                       int tensor_idx) {

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

} // namespace

TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.GetTensor = &GetTensor;
  ctx.GetEvalTensor = &GetEvalTensor;
  ctx.tensors_size = 11;
  for (size_t i = 0; i < 11; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t i = 0; i < 4; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
tflNodes[i].custom_initial_data = nullptr;
      tflNodes[i].custom_initial_data_size = 0;
if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for (size_t i = 0; i < 4; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      ResetTensors();

      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteStatus trained_model_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(inTensorIndices[index], tensor);
  return kTfLiteOk;
}

static const int outTensorIndices[] = {
  10, 
};
TfLiteStatus trained_model_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(outTensorIndices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus trained_model_invoke() {
  for (size_t i = 0; i < 4; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
